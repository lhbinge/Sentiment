indicators.M <- cbind(indicators.M, Uncert_fl.GBC = aggregate(BER.M$Q7P, by=list(BER.M$surveyQ), FUN=se)[,2])
dups <- BER.M[duplicated(BER.M[,c("id","surveyQ")]) | duplicated(BER.M[,c("id","surveyQ")], fromLast = TRUE),]
#The expectations of firms in question 31 in period t are compared to the realization of firms
#in question 7A in period t+4.
#Also compare the expectations of firms in questions 3P & 7P in period t to the realizations
#in questions 3A & 7A in period t+1.
errors1 <- indicators.M[,c(1,11)]
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
tel <- 2
for(i in levels(factor(BER.M$id))){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(BER.M, BER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="survey", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q7A[t+4] - exp.error$Q31[t]
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
# Kan dit verander na standard error or standard deviation?
uncert <- transform(errors1, SD=apply(errors1[,c(-1,-2)],1,se,na.rm = TRUE))[,c(1,ncol(errors1)+1)]
indicators.M <- cbind(indicators.M, Uncert_ee = uncert[,2])
uncert <- transform(errors2, SD=apply(errors2[,c(-1,-2)],1,se,na.rm = TRUE))[,c(1,ncol(errors2)+1)]
indicators.M <- cbind(indicators.M, Uncert_ee.prod = uncert[,2])
uncert <- transform(errors3, SD=apply(errors3[,c(-1,-2)],1,se,na.rm = TRUE))[,c(1,ncol(errors3)+1)]
indicators.M <- cbind(indicators.M, Uncert_ee.GBC = uncert[,2])
se <- function(x) sqrt(var(x)/length(na.omit(x))*(length(na.omit(x))-1)) #adjust for (n-1)
indicators.M <- cbind(indicators.M, Uncert_fl = aggregate(BER.M$Q31, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.prod = aggregate(BER.M$Q3P, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.GBC = aggregate(BER.M$Q7P, by=list(BER.M$surveyQ), FUN=se)[,2])
dups <- BER.M[duplicated(BER.M[,c("id","surveyQ")]) | duplicated(BER.M[,c("id","surveyQ")], fromLast = TRUE),]
#The expectations of firms in question 31 in period t are compared to the realization of firms
#in question 7A in period t+4.
#Also compare the expectations of firms in questions 3P & 7P in period t to the realizations
#in questions 3A & 7A in period t+1.
errors1 <- indicators.M[,c(1,11)]
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
tel <- 2
for(i in levels(factor(BER.M$id))){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(BER.M, BER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="survey", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q7A[t+4] - exp.error$Q31[t]
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
for(i in levels(factor(BER.M$id))){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(BER.M, BER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q7A[t+4] - exp.error$Q31[t]
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
View(data)
View(exp.error)
View(indicators.M)
indicators.M <- aggregate(BER.M$Q20, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)
colnames(indicators.M) <- c("Date","Conf_cc")
indicators.M <- cbind(indicators.M, Conf_fl = aggregate(BER.M$Q31, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.M <- cbind(indicators.M, Act_prod = aggregate(BER.M$Q3A, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.M <- cbind(indicators.M, Conf_prod = aggregate(BER.M$Q3P, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.M <- cbind(indicators.M, Act_GBC = aggregate(BER.M$Q7A, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.M <- cbind(indicators.M, Conf_GBC = aggregate(BER.M$Q7P, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.M <- cbind(indicators.M, Invest = aggregate(BER.M$Q10A, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.M <- cbind(indicators.M, Empl = aggregate(BER.M$Q8A, by=list(BER.M$surveyQ), FUN=mean, na.rm=TRUE)[,2])
altBER <- BER.M
altBER$Q8A <- replace(altBER$Q8A, altBER$Q8A==-1,1) # replace -1 (Down) responses with 1
indicators.M <- cbind(indicators.M, Empl_turn = aggregate(altBER$Q8A, by=list(altBER$surveyQ), FUN=mean, na.rm=TRUE)[,2])
# calculation check
#t1 <- na.omit(subset(BER$Q31,BER$survey=="01Q3"))
#fr.increase <- length(subset(t1,t1==1))/length(t1)
#fr.decrease <- length(subset(t1,t1==-1))/length(t1)
#unc <- sqrt(fr.increase+fr.decrease-(fr.increase-fr.decrease)^2)
se <- function(x) sqrt(var(x)/length(na.omit(x))*(length(na.omit(x))-1)) #adjust for (n-1)
indicators.M <- cbind(indicators.M, Uncert_fl = aggregate(BER.M$Q31, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.prod = aggregate(BER.M$Q3P, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.GBC = aggregate(BER.M$Q7P, by=list(BER.M$surveyQ), FUN=se)[,2])
dups <- BER.M[duplicated(BER.M[,c("id","surveyQ")]) | duplicated(BER.M[,c("id","surveyQ")], fromLast = TRUE),]
#The expectations of firms in question 31 in period t are compared to the realization of firms
#in question 7A in period t+4.
#Also compare the expectations of firms in questions 3P & 7P in period t to the realizations
#in questions 3A & 7A in period t+1.
errors1 <- indicators.M[,c(1,11)]
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
tel <- 2
for(i in levels(factor(BER.M$id))){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(BER.M, BER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q7A[t+4] - exp.error$Q31[t]
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
View(errors1)
View(exp.error)
exp.error$Date
View(dups)
errors1 <- indicators.M[,c(1,11)]
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
tel <- 2
for(i in levels(factor(BER.M$id))){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(BER.M, BER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ")
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q7A[t+4] - exp.error$Q31[t]
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
errors1 <- indicators.M[,c(1,11)]
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
tel <- 2
for(i in levels(factor(BER.M$id))){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(BER.M, BER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q7A[t+4] - exp.error$Q31[t]
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
str(BER.M$id)
unique(BER.M$id)
BER.M$id <- factor(BER.M$id)
levels(BER.M$id)
BER.M <- BER.M[!duplicated(BER.M[,c("id","surveyQ")]),]
errors1 <- indicators.M[,c(1,11)]
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
tel <- 2
for(i in levels(BER.M$id)){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(BER.M, BER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q7A[t+4] - exp.error$Q31[t]
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
View(data)
uncert <- transform(errors1, SD=apply(errors1[,c(-1,-2)],1,se,na.rm = TRUE))[,c(1,ncol(errors1)+1)]
uncert <- transform(errors1, SD=apply(errors1[,c(-1,-2)],1,se))[,c(1,ncol(errors1)+1)]
View(uncert)
uncert <- transform(errors1, SD=apply(errors1[,c(-1,-2)],1,sd,na.rm = TRUE))[,c(1,ncol(errors1)+1)]
View(uncert)
indicators.M <- cbind(indicators.M, Uncert_ee = uncert[,2])
uncert <- transform(errors2, SD=apply(errors2[,c(-1,-2)],1,sd,na.rm = TRUE))[,c(1,ncol(errors2)+1)]
indicators.M <- cbind(indicators.M, Uncert_ee.prod = uncert[,2])
uncert <- transform(errors3, SD=apply(errors3[,c(-1,-2)],1,sd,na.rm = TRUE))[,c(1,ncol(errors3)+1)]
indicators.M <- cbind(indicators.M, Uncert_ee.GBC = uncert[,2])
View(indicators.M)
se <- function(x) sqrt(var(x)/length(na.omit(x))*(length(na.omit(x))-1)) #adjust for (n-1)
indicators.M <- cbind(indicators.M, Uncert_fl = aggregate(BER.M$Q31, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.prod = aggregate(BER.M$Q3P, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.GBC = aggregate(BER.M$Q7P, by=list(BER.M$surveyQ), FUN=se)[,2])
View(indicators.M)
se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x))*(length(na.omit(x))-1)) #adjust for (n-1)
indicators.M <- cbind(indicators.M, Uncert_fl = aggregate(BER.M$Q31, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.prod = aggregate(BER.M$Q3P, by=list(BER.M$surveyQ), FUN=se)[,2])
indicators.M <- cbind(indicators.M, Uncert_fl.GBC = aggregate(BER.M$Q7P, by=list(BER.M$surveyQ), FUN=se)[,2])
uncert <- transform(errors1, SD=apply(errors1[,c(-1,-2)],1,se))[,c(1,ncol(errors1)+1)]
View(uncert)
NNR <- aggregate(BER.M, by=list(BER.M$surveyQ), FUN=is.na)
View(NNR)
str(NNR)
BER.M$NNR <- is.na(BER.M)
View(BER.M)
NNR <- !is.na(BER.M)
NNR <- BER.M[!is.na(BER.M)]
NNR <- BER.M[!is.na(BER.M),]
rm(NNR)
NNR <- BER.M[sum(is.na(BER.M)),]
NNR <- sum(is.na(BER.M))
countNR <- function(data) {
sum(is.na(data))/nrow(data)
}
NRR <- aggregate(BER.M, by=list(BER.M$surveyQ), FUN=countNR)
View(NRR)
for(c in 1:ncol(BER.M)) {
NRR[,c] <- sum(is.na(BER.M[,c]))/nrow(BER.M[,c])
}
View(NRR)
sum(is.na(BER.M[,c]))
c
c<-7
sum(is.na(BER.M[,c]))
c<-8
sum(is.na(BER.M[,c]))
nrow(BER.M[,c])
?nrow
nrow(BER.M[,c],na.pass)
nrow(BER.M[,c],na.pass=TRUE)
nrow(BER.M[,c],na.rm=TRUE)
nrow(BER.M[,c])
NROW(BER.M[,c])
countNR <- function(data) {
sum(is.na(data))/NROW(data)
}
NRR <- aggregate(BER.M, by=list(BER.M$surveyQ), FUN=countNR)
View(NRR)
countNR <- function(data) { sum(is.na(data))/NROW(data) }
NRR <- aggregate(BER.M, by=list(BER.M$surveyQ), FUN=countNR)
BER.M <- read.csv("Manufacturing.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
colnames(BER.M[1:7]) <- c("region","id","sector","weight","turnover","factor","surveyQ")
colnames(BER.M)[1:7] <- c("region","id","sector","weight","turnover","factor","surveyQ")
BER.B <- read.csv("Building.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
View(BER.B)
colnames(BER.B)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.B$surveyQ <- toupper(BER.B$surveyQ)
summary(BER.B$surveyQ)
str(BER.B$surveyQ)
unique(BER.B$surveyQ)
BER.B$region <- factor(BER.B$region, labels=c("WC","EC","NC","NW","FS","KZN","GP","MP","LP"))
BER.B$region <- factor(BER.B$region)
str(BER.B$region)
levels(BER.B$region)
BER.B$sector <- factor(BER.B$sector) #could include labels
BER.B$id <- factor(BER.B$id)
BER.B$surveyQ <- factor(BER.B$surveyQ)
levels(BER.B$surveyQ)
BER.B$surveyQ <- toupper(BER.B$surveyQ)
BER.B[nrow(BER.B)+1,1:5] <- BER.B[nrow(BER.B),1:5]
BER.B[nrow(BER.B),"surveyQ"] <- "05Q4"
levels(BER.B$surveyQ)
BER.B$surveyQ <- factor(BER.B$surveyQ)
levels(BER.B$surveyQ)
for(i in 7:22) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3,-1)
}
summary(BER.B$Q10)
summary(BER.B$Q11)
summary(BER.B$Q12)
summary(BER.B$Q1)
BER.B$Q1 <- replace(BER.B$Q1, BER.B$Q1==0,-1) # replace 0 (Unsatisfactory) responses with -1
indicators.B <- aggregate(BER.B$Q1, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)
colnames(indicators.B) <- c("Date","Conf_cc")
View(indicators.B)
indicators.B <- aggregate(BER.B$Q1, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)
colnames(indicators.B) <- c("Date","Conf_cc")
indicators.B <- cbind(indicators.B, Act_prod = aggregate(BER.B$Q3A, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Conf_prod = aggregate(BER.B$Q3P, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Act_GBC = aggregate(BER.B$Q2A, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Conf_GBC = aggregate(BER.B$Q2P, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Empl = aggregate(BER.B$Q4A, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
altBER <- BER.B
altBER$Q4A <- replace(altBER$Q4A, altBER$Q4A==-1,1) # replace -1 (Down) responses with 1
indicators.B <- cbind(indicators.B, Empl_turn = aggregate(altBER$Q4A, by=list(altBER$surveyQ), FUN=mean, na.rm=TRUE)[,2])
# calculation check
View(indicators.B)
indicator_plot <- indicators.M
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
#g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
View(indicators.M)
indicator_plot <- indicators.M[,c(1,2,3,5,7)]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
#g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
indicator_plot <- indicators.M[,c(1,2,3,5,7)]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
indicator_plot <- indicators.M[,c(1,2,3,5,7)]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
indicator_plot <- indicators.M[,c(1,14,15,16)]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
indicator_plot <- indicators.M[,c(1,20,21,22)]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
?aggregate
?mean
indicators.B <- aggregate(BER.B$Q1, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)
colnames(indicators.B) <- c("Date","Conf_cc")
indicators.B <- cbind(indicators.B, Act_prod = aggregate(BER.B$Q3A, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Conf_prod = aggregate(BER.B$Q3P, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Act_GBC = aggregate(BER.B$Q2A, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Conf_GBC = aggregate(BER.B$Q2P, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
indicators.B <- cbind(indicators.B, Empl = aggregate(BER.B$Q4A, by=list(BER.B$surveyQ), FUN=mean, na.rm=TRUE)[,2])
altBER <- BER.B
altBER$Q4A <- replace(altBER$Q4A, altBER$Q4A==-1,1) # replace -1 (Down) responses with 1
indicators.B <- cbind(indicators.B, Empl_turn = aggregate(altBER$Q4A, by=list(altBER$surveyQ), FUN=mean, na.rm=TRUE)[,2])
# calculation check
#t1 <- na.omit(subset(BER$Q31,BER$survey=="01Q3"))
#fr.increase <- length(subset(t1,t1==1))/length(t1)
#fr.decrease <- length(subset(t1,t1==-1))/length(t1)
#unc <- sqrt(fr.increase+fr.decrease-(fr.increase-fr.decrease)^2)
# Kan dit verander na standard error or standard deviation?
se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x))*(length(na.omit(x))-1)) #adjust for (n-1)
indicators.B <- cbind(indicators.B, Uncert_fl.prod = aggregate(BER.B$Q3P, by=list(BER.B$surveyQ), FUN=se)[,2])
indicators.B <- cbind(indicators.B, Uncert_fl.GBC = aggregate(BER.B$Q2P, by=list(BER.B$surveyQ), FUN=se)[,2])
View(indicators.B)
dups <- BER.B[duplicated(BER.B[,c("id","surveyQ")]) | duplicated(BER.B[,c("id","surveyQ")], fromLast = TRUE),]
View(dups)
BER.B <- BER.B[!duplicated(BER.B[,c("id","surveyQ")]),]
errors1 <- indicators.B[,c(1,11)]
errors2 <- indicators.B[,c(1,11)]
tel <- 2
for(i in levels(BER.B$id)){
tel <- tel + 1
#BER.B$counter <- as.numeric(BER.B$survey)
exp.error <- indicators.B[,c(1,11)]
data <- subset(BER.B, BER.B$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error2[t] <- exp.error$Q2A[t+1] - exp.error$Q2P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
}
# Kan dit verander na standard error or standard deviation?
uncert <- transform(errors1, SD=apply(errors1[,c(-1,-2)],1,se))[,c(1,ncol(errors1)+1)]
indicators.B <- cbind(indicators.B, Uncert_ee.prod = uncert[,2])
uncert <- transform(errors2, SD=apply(errors2[,c(-1,-2)],1,se))[,c(1,ncol(errors2)+1)]
indicators.B <- cbind(indicators.B, Uncert_ee.GBC = uncert[,2])
View(indicators.M)
errors1 <- indicators.B[,c(1,9)]
errors2 <- indicators.B[,c(1,9)]
tel <- 2
for(i in levels(BER.B$id)){
tel <- tel + 1
#BER.B$counter <- as.numeric(BER.B$survey)
exp.error <- indicators.B[,c(1,9)]
data <- subset(BER.B, BER.B$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error1[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error2[t] <- exp.error$Q2A[t+1] - exp.error$Q2P[t]
}
errors1 <- cbind(errors1, exp.error$error1)
colnames(errors1)[tel] <- as.character(i)
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
}
View(errors1)
# Kan dit verander na standard error or standard deviation?
uncert <- transform(errors1, SD=apply(errors1[,c(-1,-2)],1,se))[,c(1,ncol(errors1)+1)]
indicators.B <- cbind(indicators.B, Uncert_ee.prod = uncert[,2])
uncert <- transform(errors2, SD=apply(errors2[,c(-1,-2)],1,se))[,c(1,ncol(errors2)+1)]
indicators.B <- cbind(indicators.B, Uncert_ee.GBC = uncert[,2])
# Calculate Response Rates
countNR <- function(data) { sum(is.na(data))/NROW(data) }
NRR <- aggregate(BER.B, by=list(BER.B$surveyQ), FUN=countNR)
View(NRR)
indicator_plot <- indicators.B[,c(1,2,4,6)]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
indicator_plot <- indicators.B[,c(1,9,10,11,12)]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
BER.R <- read.csv("Retail.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
BER.W <- read.csv("Wholesale.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
BER.Mo <- read.csv("Motor.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
View(BER.R)
View(BER.W)
View(BER.Mo)
BER.V <- read.csv("Motor.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
View(BER.V)
BER.T <- rbind(BER.R,BER.W)
View(BER.T)
colnames(BER.T)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.T$surveyQ <- toupper(BER.T$surveyQ)
BER.T[nrow(BER.T)+1,1:5] <- BER.T[nrow(BER.T),1:5]
BER.T[nrow(BER.T),"surveyQ"] <- "05Q4"
BER.T$region <- factor(BER.T$region)
BER.T$sector <- factor(BER.T$sector) #could include labels
BER.T$id <- factor(BER.T$id)
BER.T$surveyQ <- factor(BER.T$surveyQ)
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:21) {
BER.T[,i] <- replace(BER.T[,i], BER.T[,i]==2, 0)
BER.T[,i] <- replace(BER.T[,i], BER.T[,i]==3,-1)
}
BER.T$Q1 <- replace(BER.T$Q1, BER.T$Q1==0,-1) # replace 0 (Unsatisfactory) responses with -1
