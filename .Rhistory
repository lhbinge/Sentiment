g <- g + theme(legend.position="bottom")
g
View(indicators.M)
w.indicators <- merge(w.indicators.M[,c("Q7A","Q7P","Conf_cc.M","Conf_fl.M")], w.indicators.B[,c("Q2A","Q2P","Conf_cc.B","Conf_fl.B")],
by.x="row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.T[,c("Q2A","Q2P","Conf_cc.T","Conf_fl.T")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.V[,c("Q2A","Q2P","Conf_cc.V","Conf_fl.V")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.S[,c("Q2A","Q2P","Conf_cc.S","Conf_fl.S")], by.x="Row.names", by.y="row.names",all.x=TRUE)
colnames(w.indicators)[1] <- "Date"
w.indicators$Date <- GDPdata[,1]
w.indicators$Conf_2A <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(2,6,10,14,18)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_2P <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(3,7,11,15,19)],
weights[weights$Date==x,-1],na.rm=TRUE))
indicator_plot <- w.indicators[,c("Date","Conf_cc","Conf_2A")]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- w.indicators[,c("Date","Conf_cc","Conf_2A")]
w.indicators$Conf_2A <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(2,6,10,14,18)],
weights[weights$Date==x,-1],na.rm=TRUE))
weighted.mean(w.indicators[which(w.indicators$Date==x),c(2,6,10,14,18)],
weights[weights$Date==x,-1],na.rm=TRUE)
w.indicators$Conf_cc <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(4,8,12,16,20)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_fl <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(5,9,13,17,21)],
weights[weights$Date==x,-1],na.rm=TRUE))
weights <- cbind(Date=levels(BER.M$surveyQ),GDPdata[,2:6])
w.indicators <- merge(w.indicators.M[,c("Q7A","Q7P","Conf_cc.M","Conf_fl.M")], w.indicators.B[,c("Q2A","Q2P","Conf_cc.B","Conf_fl.B")],
by.x="row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.T[,c("Q2A","Q2P","Conf_cc.T","Conf_fl.T")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.V[,c("Q2A","Q2P","Conf_cc.V","Conf_fl.V")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.S[,c("Q2A","Q2P","Conf_cc.S","Conf_fl.S")], by.x="Row.names", by.y="row.names",all.x=TRUE)
colnames(w.indicators)[1] <- "Date"
w.indicators$Date <- GDPdata[,1]
w.indicators <- merge(w.indicators.M[,c("Q7A","Q7P","Conf_cc.M","Conf_fl.M")], w.indicators.B[,c("Q2A","Q2P","Conf_cc.B","Conf_fl.B")],
by.x="row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.T[,c("Q2A","Q2P","Conf_cc.T","Conf_fl.T")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.V[,c("Q2A","Q2P","Conf_cc.V","Conf_fl.V")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.S[,c("Q2A","Q2P","Conf_cc.S","Conf_fl.S")], by.x="Row.names", by.y="row.names",all.x=TRUE)
colnames(w.indicators)[1] <- "Date"
w.indicators$Conf_cc <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(4,8,12,16,20)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_fl <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(5,9,13,17,21)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_2A <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(2,6,10,14,18)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_2P <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(3,7,11,15,19)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Date <- GDPdata[,1]
indicator_plot <- w.indicators[,c("Date","Conf_cc","Conf_2A")]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- w.indicators[,c("Date","Conf_fl","Conf_2P")]
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
##Weighted versions
weights <- cbind(Date=levels(BER.M$surveyQ),GDPdata[,2:6])
w.indicators <- merge(w.indicators.M[,c("Conf_cc.M","Conf_fl.M")], w.indicators.B[,c("Conf_cc.B","Conf_fl.B")],
by.x="row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.T[,c("Conf_cc.T","Conf_fl.T")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.V[,c("Conf_cc.V","Conf_fl.V")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.S[,c("Conf_cc.S","Conf_fl.S")], by.x="Row.names", by.y="row.names",all.x=TRUE)
colnames(w.indicators)[1] <- "Date"
w.indicators$Conf_cc <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(2,4,6,8,10)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_fl <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(3,5,7,9,11)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Date <- GDPdata[,1]
#-------------------
View(w.indicators)
w.indicators <- merge(w.indicators.M[,c("Q7A","Q7P","Conf_cc.M","Conf_fl.M")], w.indicators.B[,c("Q2A","Q2P","Conf_cc.B","Conf_fl.B")],
by.x="row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.T[,c("Q2A","Q2P","Conf_cc.T","Conf_fl.T")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.V[,c("Q2A","Q2P","Conf_cc.V","Conf_fl.V")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.S[,c("Q2A","Q2P","Conf_cc.S","Conf_fl.S")], by.x="Row.names", by.y="row.names",all.x=TRUE)
colnames(w.indicators)[1] <- "Date"
w.indicators$Conf_cc <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(4,8,12,16,20)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_fl <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(5,9,13,17,21)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_2A <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(2,6,10,14,18)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_2P <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(3,7,11,15,19)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Date <- GDPdata[,1]
w.indicators <- merge(w.indicators.M[,c("Conf_cc.M","Conf_fl.M")], w.indicators.B[,c("Conf_cc.B","Conf_fl.B")],
by.x="row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.T[,c("Conf_cc.T","Conf_fl.T")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.V[,c("Conf_cc.V","Conf_fl.V")], by.x="Row.names", by.y="row.names",all.x=TRUE)
w.indicators <- merge(w.indicators, w.indicators.S[,c("Conf_cc.S","Conf_fl.S")], by.x="Row.names", by.y="row.names",all.x=TRUE)
colnames(w.indicators)[1] <- "Date"
w.indicators$Conf_cc <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(2,4,6,8,10)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Conf_fl <- sapply(w.indicators$Date, function(x) weighted.mean(w.indicators[which(w.indicators$Date==x),c(3,5,7,9,11)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators$Date <- GDPdata[,1]
#-------------------
indicators.M <- cbind(indicators.M,aggregate(BER.M[,(match("surveyQ",colnames(BER.M))+1):ncol(BER.M)], by=list(BER.M$surveyQ), FUN=se, na.rm=TRUE))
se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x))*(length(na.omit(x))-1)) #adjust for (n-1)
indicators.M <- cbind(indicators.M,aggregate(BER.M[,(match("surveyQ",colnames(BER.M))+1):ncol(BER.M)], by=list(BER.M$surveyQ), FUN=se, na.rm=TRUE))
se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x))*(length(na.omit(x))-1)) #adjust for (n-1)
uncertainty.M <- aggregate(BER.M[,(match("surveyQ",colnames(BER.M))+1):ncol(BER.M)], by=list(BER.M$surveyQ), FUN=se, na.rm=TRUE)
uncertainty.M <- aggregate(BER.M[,(match("surveyQ",colnames(BER.M))+1):ncol(BER.M)], by=list(BER.M$surveyQ), FUN=se)
View(uncertainty.M)
aggregate(BER.M$Q31, by=list(BER.M$surveyQ), FUN=se)
uncertainty.M$Uncert_fl.M <- rowMeans(uncertainty.M[,c("Q1P","Q2P","Q3P","Q4P","Q5P","Q6P","Q7P","Q8P","Q9P","Q10P")],na.rm = TRUE, dims = 1)
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
View(errors2)
#remove duplicates
dups <- BER.M[duplicated(BER.M[,c("id","surveyQ")]) | duplicated(BER.M[,c("id","surveyQ")], fromLast = TRUE),]
uniBER.M <- BER.M[!duplicated(BER.M[,c("id","surveyQ")]),]
levels(uniBER.M$id)
for(i in levels(uniBER.M$id)){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(uniBER.M, uniBER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
tel <- 2
for(i in levels(uniBER.M$id)){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(uniBER.M, uniBER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
exp.error <- indicators.M[,c(1,11)]
data <- subset(uniBER.M, uniBER.M$id==i)
View(data)
View(exp.error)
levels(uniBER.M$id)
x <- "10620"
uniBER.M[which(uniBER.M$id==x),]
temp <- uniBER.M[which(uniBER.M$id==x),]
View(temp)
temp$surveyQ <- as.numeric(temp$surveyQ)
temp <- uniBER.M[which(uniBER.M$id==x),]
levels(temp$surveyQ)
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
exp.error <- indicators.M[,c(1,11)]
data <- subset(uniBER.M, uniBER.M$id==i)
View(data)
levels(BER$surveyQ)
#Unweighted versions
confidence <- aggregate(BER[,(match("surveyQ",colnames(BER))+1):ncol(BER)], by=list(BER$surveyQ), FUN=mean, na.rm=TRUE)
confidence$Conf_cc <- rowMeans(confidence[,c("Q2A","Q3A","Q4A","Q5A","Q6A")],na.rm = TRUE, dims = 1)
confidence$Conf_fl <- rowMeans(confidence[,c("Q2P","Q3P","Q4P","Q5P","Q6P")],na.rm = TRUE, dims = 1)
View(confidence)
View(BER)
BER <- BER[,c(12,1,2,3,4,5,6,7,8,9,10,11,13,14)]
#Unweighted versions
confidence <- aggregate(BER[,(match("surveyQ",colnames(BER))+1):ncol(BER)], by=list(BER$surveyQ), FUN=mean, na.rm=TRUE)
confidence$Conf_cc <- rowMeans(confidence[,c("Q2A","Q3A","Q4A","Q5A","Q6A")],na.rm = TRUE, dims = 1)
confidence$Conf_fl <- rowMeans(confidence[,c("Q2P","Q3P","Q4P","Q5P","Q6P")],na.rm = TRUE, dims = 1)
merge(uncertainty.M[,1],temp,by="surveyQ")
merge(uncertainty.M[,1],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
merge(uncertainty.M[,c(1,15)],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
x <- merge(uncertainty.M[,c(1,15)],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
View(x)
x <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
temp <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
nrow(temp)
sapply(nrow(temp), function(x) temp[t] <- temp[t+1] - temp[t])
temp <- temp[,-1:-8]
sapply(nrow(temp), function(t) temp[t] <- temp[t+1] - temp[t])
nrow(temp)
1:nrow(temp)
sapply(1:nrow(temp), function(t) temp[t] <- temp[t+1] - temp[t])
t <-63
temp[t] <- temp[t+1] - temp[t]
sapply(1:nrow(temp), function(t) { temp[t] <- temp[t+1] - temp[t]})
sapply(1:nrow(temp), function(t) { error[t] <- error[t+1] - error[t] } )
sapply(1:nrow(temp), function(t) { error[t,] <- error[t+1,] - error[t,] } )
error[t,]
error[t,] <- error[t+1,] - error[t,]
temp[t,] <- temp[t+1,] - temp[t,]
sapply(1:nrow(temp), function(t) { temp[t,] <- temp[t+1,] - temp[t,] } )
temp <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
temp <- temp[,-1:-8]
temp <- uniBER.M[which(uniBER.M$id==x),]
levels(uniBER.M$id)
temp <- uniBER.M[which(uniBER.M$id=="10620"),]
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
error <- error[,-1:-8]
View(error)
error1 <- error[t,] <- error[t+1,] - error[t,]
View(error1)
error1 <- sapply(1:nrow(error), function(t) { error[t,] <- error[t+1,] - error[t,] } )
error1 <- sapply(1:nrow(error), function(t) { error[t] <- error[t+1] - error[t] } )
1:nrow(error)
error[t] <- error[t+1] - error[t]
error1 <- sapply(1:nrow(error), function(t) { error[t+1] - error[t] } )
error1 <- sapply(1:nrow(error), function(t) { error[t+1,] - error[t,] } )
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
error <- error[,-1:-8]
error1 <- error[t+1,] - error[t,]
error1 <- error
error <- error[t+1,] - error[t,]
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
error <- error[,-1:-8]
1:nrow(error)
1:ncol(error)
for(t in 1:nrow(error)) {
error1 <- sapply(1:ncol(error), function(t) { error[t+1,] - error[t,] } )
}
for(t in 1:nrow(error)) {
error1 <- sapply(1:ncol(error), function(t) { error[t+1] - error[t] } )
}
for(t in 1:nrow(error)) {
error1 <- sapply(1:ncol(error), function(x) { error[t+1,x] - error[t,x] } )
}
1:ncol(error)
error1 <- sapply(1:ncol(error), function(x) error[t+1,x] - error[t,x] )
sapply(1:ncol(error), function(x) error1 <- error[t+1,x] - error[t,x] )
}
sapply(1:ncol(error), function(x) { error1 <- error[t+1,x] - error[t,x]} )
for(i in 1:ncol(error)) {
for(t in 1:nrow(error)) {
error1 <- error[t+1,i] - error[t,i]
}
}
for(i in 1:ncol(error)) {
for(t in 1:nrow(error)) {
error1[t,i] <- error[t+1,i] - error[t,i]
}
}
error1 <- data.frame()
for(i in 1:ncol(error)) {
for(t in 1:nrow(error)) {
error1[t,i] <- error[t+1,i] - error[t,i]
}
}
error1 <- data.frame()
for(i in 1:20) {
for(t in 1:nrow(error)) {
error1[t,i+1] <- error[t+1,i] - error[t,i+1]
}
}
for(t in 1:(nrow(error))) {
error1$Q1[t] <- error$Q1A[t+1] - error$Q1P[t]
}
error1 <- data.frame()
for(t in 1:(nrow(error))) {
error1$Q1[t] <- error$Q1A[t+1] - error$Q1P[t]
}
for(t in 1:nrow(error)) {
error1$Q1[t] <- error$Q1A[t+1] - error$Q1P[t]
}
for(t in 1:nrow(error)) {
error$eQ1[t] <- error$Q1A[t+1] - error$Q1P[t]
}
for(t in 1:nrow(error)) {
error$eQ1[t] <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t] <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t] <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t] <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t] <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t] <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t] <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t] <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t] <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
View(errors2)
errors2 <- indicators.M[,c(1,11)]
errors3 <- indicators.M[,c(1,11)]
tel <- 2
for(i in levels(uniBER.M$id)){
tel <- tel + 1
#BER.M$counter <- as.numeric(BER.M$survey)
exp.error <- indicators.M[,c(1,11)]
data <- subset(uniBER.M, uniBER.M$id==i)
#data <- data[order(data$counter),]
exp.error <- merge(exp.error, data, by.x="Date",by.y="surveyQ", all.x = TRUE)
for(t in 1:(nrow(exp.error))) {
exp.error$error2[t] <- exp.error$Q3A[t+1] - exp.error$Q3P[t]
exp.error$error3[t] <- exp.error$Q7A[t+1] - exp.error$Q7P[t]
}
errors2 <- cbind(errors2, exp.error$error2)
colnames(errors2)[tel] <- as.character(i)
errors3 <- cbind(errors3, exp.error$error3)
colnames(errors3)[tel] <- as.character(i)
}
uncert <- transform(error, SD=apply(errors2[,c(56:65)],1,se))
uncert <- transform(error, SD=apply(error[,c(56:65)],1,se))
View(uncert)
cbind(temp[,1],error[,56:65])
temp[,1]
temp <- uniBER.M[which(uniBER.M$id=="10620"),]
cbind(temp[,1],error[,56:65])
temp[,1]
temp <- uniBER.M[which(uniBER.M$id=="10620"),]
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
errors <- data.frame()
rm(errors)
errors <- rbind(errors, error[,c(1,56:65)])
errors <- data.frame()
errors <- rbind(errors, error[,c(1,56:65)])
View(errors)
errors <- data.frame()
errors <- rbind(errors, error[,c(1,64:73)])
errors <- data.frame()
exp.error <- function(temp) {
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
errors <- rbind(errors, error[,c(1,64:73)])
return(errors)
}
exp.error.M <- sapply(levels(uniBER.M$id), function(x) exp.error(uniBER.M[which(uniBER.M$id==x),]))
View(exp.error.M)
levels(uniBER.M$id
)
x <- "3342"
temp <- uniBER.M[which(uniBER.M$id==x),]
View(temp)
temp <- uniBER.M[which(uniBER.M$id=="94057"),]
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
errors <- rbind(errors, error[,c(1,64:73)])
temp <- uniBER.M[which(uniBER.M$id=="94349"),]
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
errors <- rbind(errors, error[,c(1,64:73)])
3313*95
errors <- data.frame()
exp.error <- function(temp) {
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
errors <- rbind(errors, error[,c(1,64:73)])
return(errors)
}
exp.error.M <- sapply(levels(uniBER.M$id), function(x) exp.error(uniBER.M[which(uniBER.M$id==x),]))
temp <- uniBER.M[which(uniBER.M$id=="3342"),]
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
errors <- rbind(errors, error[,c(1,64:73)])
temp <- uniBER.M[which(uniBER.M$id=="3344"),]
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
errors <- rbind(errors, error[,c(1,64:73)])
for(i in levels(uniBER.M$id)){
exp.error.M <- exp.error(uniBER.M[which(uniBER.M$id==i),])
}
exp.error <- function(temp) {
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[t+1] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[t+1] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[t+1] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[t+1] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[t+1] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[t+1] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[t+1] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[t+1] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[t+1] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[t+1] - error$Q10P[t]
}
return(error[,c(1,64:73)])
}
errors <- data.frame()
for(i in levels(uniBER.M$id)){
errors <- rbind(errors, exp.error(uniBER.M[which(uniBER.M$id==i),]))
}
exp.errors.M <- aggregate(errors, by=list(errors$Group.1), FUN=se)
View(exp.errors.M)
exp.errors.M <- exp.errors.M[-2]
uncertainty.M$Uncert_ee.M <- rowMeans(exp.errors.M[,-1],na.rm = TRUE, dims = 1)
View(uncertainty.M)
#Compare the expectations of firms in Q3P & Q7P in period t to the realizations in Q3A & Q7A in period t+1.
exp.error <- function(temp) {
error <- merge(uncertainty.M[,c(1,ncol(uncertainty.M))],temp,by.x="Group.1",by.y="surveyQ", all.x=TRUE)
for(t in 1:nrow(error)) {
error$eQ1[t]  <- error$Q1A[(t+1)] - error$Q1P[t]
error$eQ2[t]  <- error$Q2A[(t+1)] - error$Q2P[t]
error$eQ3[t]  <- error$Q3A[(t+1)] - error$Q3P[t]
error$eQ4[t]  <- error$Q4A[(t+1)] - error$Q4P[t]
error$eQ5[t]  <- error$Q5A[(t+1)] - error$Q5P[t]
error$eQ6[t]  <- error$Q6A[(t+1)] - error$Q6P[t]
error$eQ7[t]  <- error$Q7A[(t+1)] - error$Q7P[t]
error$eQ8[t]  <- error$Q8A[(t+1)] - error$Q8P[t]
error$eQ9[t]  <- error$Q9A[(t+1)] - error$Q9P[t]
error$eQ10[t] <- error$Q10A[(t+1)] - error$Q10P[t]
}
return(error[,c(1,64:73)])
}
errors <- data.frame()
for(i in levels(uniBER.M$id)){
errors <- rbind(errors, exp.error(uniBER.M[which(uniBER.M$id==i),]))
}
exp.errors.M <- aggregate(errors, by=list(errors$Group.1), FUN=se)[-2]
?sd
exp.errors.M <- aggregate(errors, by=list(errors$Group.1), FUN=sd)[-2]
exp.errors.M <- aggregate(errors, by=list(errors$Group.1), FUN=sd,na.rm=TRUE)[-2]
