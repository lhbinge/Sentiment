BER.B$factor[BER.B$sector ==6010] <- 0.15
BER.B$factor <- BER.B$factor*BER.B$weight
#BER.B$factor <- BER.B$weight
BER.B$temp <- NULL
for(i in 1:nrow(BER.B)) {
ifelse(substr(BER.B$surveyQ[i], 1, 1)==9,
BER.B$temp[i] <- paste0("19",BER.B$surveyQ[i],sep=""),
BER.B$temp[i] <- paste0("20",BER.B$surveyQ[i],sep=""))
}
BER.B$surveyQ <- BER.B$temp
BER.B <- BER.B[,-ncol(BER.B)]
BER.B$surveyQ <- factor(BER.B$surveyQ)
BER.B <- subset(BER.B, !(surveyQ %in% exclude))
##===============================##
skoon <- function(data) {
colnames(data)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
data$surveyQ <- toupper(data$surveyQ)
data$sector <- factor(data$sector) #could include labels
data$id <- factor(data$id)
data$region <- factor(data$region)
data$temp <- NULL
for(i in 1:nrow(data)) {
data$temp[i] <- paste0("20",data$surveyQ[i],sep="")
}
data$surveyQ <- data$temp
data <- data[,-ncol(data)]
data$surveyQ <- factor(data$surveyQ)
data$weight <- replace(data$weight, data$weight==0, 1)
data$factor <- data$weight*0.10
#data <- data[data$Latecomer == FALSE | is.na(data$Latecomer),]
data <- data[,1:(ncol(data)-6)]
data <- subset(data, !(surveyQ %in% exclude))
return(data)
}
arc <- skoon(read.csv("Argitekte.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
civil <- skoon(read.csv("Civils.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
qs <- skoon(read.csv("QS.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
##============================##
#BER.R <- read.csv("Retail.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
#BER.W <- read.csv("Wholesale.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
#BER.T <- rbind(BER.R,BER.W)
#BER.T <- rbind.fill(BER.T,read.csv("Trade_pre2001.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
#BER.T <- BER.T[,1:21]
#colnames(BER.T)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
#BER.T$factor <- as.numeric(as.character(BER.T$factor))
#BER.V <- rbind.fill(read.csv("Motor.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE),
#                    read.csv("Motor_pre2001.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
#BER.V <- BER.V[,1:28]
#colnames(BER.V)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
#BER.V$factor <- BER.V$weight*0.25
skoon <- function(data) {
colnames(data)[1:7] <- c("region","id","sector","weight","sectorw","factor","surveyQ")
data$surveyQ <- toupper(data$surveyQ)
data$sector <- factor(data$sector) #could include labels
data$id <- factor(data$id)
data$region <- factor(data$region)
data$temp <- NULL
for(i in 1:nrow(data)) {
ifelse(substr(data$surveyQ[i], 1, 1)==9,
data$temp[i] <- paste0("19",data$surveyQ[i],sep=""),
data$temp[i] <- paste0("20",data$surveyQ[i],sep=""))
}
data$surveyQ <- data$temp
data <- data[,-ncol(data)]
data$surveyQ <- factor(data$surveyQ)
data$sectorw <- as.numeric(as.character(data$sectorw))
data$factor <- as.numeric(as.character(data$factor))
data$factor <- data$weight*data$sectorw
#data <- data[data$Latecomer == FALSE | is.na(data$Latecomer),]
data <- data[,1:(ncol(data)-5)]
data <- subset(data, !(surveyQ %in% exclude))
return(data)
}
BER.R <- skoon(read.csv("Retail_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.W <- skoon(read.csv("Wholesale_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.V <- skoon(read.csv("Motor_92Q2-17Q2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.V$factor <- BER.V$weight*0.2
##===============================##
BER.S <- read.csv("Services_05Q2-17Q2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
colnames(BER.S)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.S$temp <- NULL
for(i in 1:nrow(BER.S)) {
BER.S$temp[i] <- paste0("20",BER.S$surveyQ[i],sep="")
}
BER.S$surveyQ <- BER.S$temp
BER.S <- BER.S[,-ncol(BER.S)]
BER.S$surveyQ <- factor(BER.S$surveyQ)
BER.S$sector[BER.S$sector==6000] <- 6001
BER.S$sector[BER.S$sector==6010] <- 6011
catering <- c(6001,6020,6030,6011)
transport <- c(7020,7010,7070,7090,7080,7060,7000,7040,7100,7120,7110,7050)
realestate <- c(8000,8010)
business <- c(8040,8080,8070,8090,8020,8060,8050,8030)
other <- c(8150,8120,8210,8180,8140,8160,8190,8100,8200,8230,8130,8110,8170,8240,8220)
community <- c(9000,9010,9030,9050,9060,9020,9040)
BER.S$factor[BER.S$sector %in% catering] <- 0.15
BER.S$factor[BER.S$sector %in% transport] <- 0.15
BER.S$factor[BER.S$sector %in% realestate] <- 0.15
BER.S$factor[BER.S$sector %in% business] <- 0.05
BER.S$factor[BER.S$sector %in% other] <- 0.45
BER.S$factor[BER.S$sector %in% community] <- 0.05
#BER.S$factor[BER.S$sector %in% catering] <- 0.16/4
#BER.S$factor[BER.S$sector %in% transport] <- 0.24/12
#BER.S$factor[BER.S$sector %in% realestate] <- 0.1/2
#BER.S$factor[BER.S$sector %in% business] <- 0.05/8
#BER.S$factor[BER.S$sector %in% other] <- 0.4/15
#BER.S$factor[BER.S$sector %in% community] <- 0.05/7
BER.S$factor <- BER.S$factor*BER.S$weight
BER.S <- subset(BER.S, !(surveyQ %in% exclude))
#==================
#AGGREGATING
#==================
#Create an unweighted stacked version of all the surveys
#Match the same or similar questions from the different surveys (see survey question examples)
#Create NAs for missing questions
tempBER.M <- cbind(BER.M[,c("id","sector","weight","factor","surveyQ","Q20","Q7A","Q7P","Q1A","Q1P","Q8A","Q8P",            "Q4A","Q4P")],"Manufacturing")
colnames(tempBER.M) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",            "Q6A","Q6P",  "Sector")
tempBER.M[,c("Q5A","Q5P")] <- NA
tempBER.B <- cbind(BER.B[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Construction")
colnames(tempBER.B) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempBER.B[,c("Q6A","Q6P")] <- NA
tempBER.R <- cbind(BER.R[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q5A","Q5P","Q8",       "Q4A","Q4P")],"Trade")
colnames(tempBER.R) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A",      "Q6A","Q6P"  ,"Sector")
tempBER.R[,c("Q5P","Q6A","Q6P")] <- NA
tempBER.W <- cbind(BER.W[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q5A","Q5P","Q8",       "Q4A","Q4P")],"Trade")
colnames(tempBER.W) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A",      "Q6A","Q6P"  ,"Sector")
tempBER.W[,c("Q5P","Q6A","Q6P")] <- NA
tempBER.V <- cbind(BER.V[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P",                        "Q4A","Q4P")],"Trade")
colnames(tempBER.V) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P",                        "Q6A","Q6P"  ,"Sector")
tempBER.V[,c("Q4A","Q4P","Q5A","Q5P")] <- NA
tempBER.S <- cbind(BER.S[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Services")
colnames(tempBER.S) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempBER.S[,c("Q6A","Q6P")] <- NA
temparc <- cbind(arc[,c("id","sector","weight","factor","surveyQ", "Q1","Q6A","Q6P","Q5A","Q5P","Q2A","Q2P",                "Q4A","Q4P")],"Construction")
colnames(temparc) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",              "Q6A","Q6P","Sector")
temparc[,c("Q5A","Q5P")] <- NA
tempqs <- cbind(qs[,c("id","sector","weight","factor","surveyQ", "Q1","Q6A","Q6P","Q5A","Q5P","Q2A","Q2P",                "Q4A","Q4P")],"Construction")
colnames(tempqs) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",              "Q6A","Q6P","Sector")
tempqs[,c("Q5A","Q5P")] <- NA
tempcivil <- cbind(civil[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Construction")
colnames(tempcivil) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempcivil[,c("Q6A","Q6P")] <- NA
BER <- tempBER.M
BER <- rbind(BER,tempBER.B,tempBER.R,tempBER.W,tempBER.V,tempBER.S,temparc,tempqs,tempcivil)
BER <- BER[,c(15,1:12,16,17,13,14)]
rm(tempBER.M,tempBER.B,tempBER.R,tempBER.W,tempBER.V,tempBER.S,temparc,tempqs,tempcivil)
rm(BER.M,BER.B,BER.R,BER.W,BER.V,BER.S,arc,qs,civil)
#Clean data
BER$surveyQ <- toupper(BER$surveyQ)
BER$sector <- factor(BER$sector) #could include labels
BER$id <- factor(BER$id)
BER$surveyQ <- factor(BER$surveyQ)
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:ncol(BER)) {
BER[,i] <- replace(BER[,i], BER[,i]==2, 0)
BER[,i] <- replace(BER[,i], BER[,i]==3,-1)
}
BER$Q1 <- replace(BER$Q1, BER$Q1==0,-1) # replace 0 (Unsatisfactory) responses with -1
#Maak factor reg
Ej <- aggregate(BER$weight, by=list(BER$surveyQ,BER$sector), FUN=sum)
BER <-  merge(BER, Ej, by.x=c("surveyQ","sector"), by.y=c("Group.1","Group.2"))
BER$factorn <- BER$factor/BER$x
BER <- BER[,c(3,4,2,5,6,19,1,7:17)]
setwd("C:\\Users\\Laurie\\OneDrive\\Documents\\BING\\BER Confidence Surveys\\Sentiment")
suppressMessages(library(ggplot2))
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
suppressMessages(library(reshape2))
suppressMessages(library(stargazer))
suppressMessages(library(xtable))
suppressMessages(library(scales))
suppressMessages(library(quantmod))
suppressMessages(library(vars))
suppressMessages(library(tseries))
suppressMessages(library(urca))
GDPdata <- read.csv("GDP Data2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
GDPdata$Date <- as.Date(GDPdata$Date, format = "%Y/%m/%d")
datums <- read.csv("dates2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
datums$Datum <- as.Date(datums$Datum, format = "%Y/%m/%d")
##For Grpahing Business cycles
recessions.df = read.table(textConnection(
"Peak, Trough
1990-12-31, 1993-05-30
1996-11-30, 1999-08-31
2007-11-30, 2009-08-31
2013-11-30, 2016-12-31"), sep=',',
colClasses=c('Date', 'Date'), header=TRUE)
realGDP <- read.csv("RealGDP2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
realGDP$Date <- as.Date(realGDP$Date, format = "%Y/%m/%d")
GDPgrowth4 <- as.data.frame(sapply(log(realGDP[,-1]), diff, lag =4))
GDPgrowth1 <- as.data.frame(sapply(log(realGDP[,-1]), diff, lag =1))
##====================================##
## READING IN THE DATA ##
##====================================##
BER.M <- read.csv("Manufacturing_new faktor.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
BER.M$Faktor <- BER.M$Gewig * BER.M$Sectorw
##====================================##
BER.M <- read.csv("Manufacturing_new faktor_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
BER.M$Faktor <- BER.M$Gewig * BER.M$Sectorw
BER.M <- BER.M[,c(1:5,8:75)]
colnames(BER.M)[1:7] <- c("region","id","sector","weight","turnover","factor","surveyQ")
exclude <- c("2016Q4","2017Q1","2017Q2")
BER.M <- subset(BER.M, !(surveyQ %in% exclude))
BER.M$factor <- as.numeric(as.character(BER.M$factor))
##===============================##
BER.B <- read.csv("Building_93Q2-17Q2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
colnames(BER.B)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.B$factor[BER.B$sector ==5000] <- 0.30
BER.B$factor[BER.B$sector ==5010] <- 0.15
BER.B$factor[BER.B$sector ==6000] <- 0.10
BER.B$factor[BER.B$sector ==6010] <- 0.15
BER.B$factor <- BER.B$factor*BER.B$weight
BER.B$temp <- NULL
for(i in 1:nrow(BER.B)) {
ifelse(substr(BER.B$surveyQ[i], 1, 1)==9,
BER.B$temp[i] <- paste0("19",BER.B$surveyQ[i],sep=""),
BER.B$temp[i] <- paste0("20",BER.B$surveyQ[i],sep=""))
}
BER.B$surveyQ <- BER.B$temp
BER.B <- BER.B[,-ncol(BER.B)]
BER.B$surveyQ <- factor(BER.B$surveyQ)
BER.B <- subset(BER.B, !(surveyQ %in% exclude))
##===============================##
skoon <- function(data) {
colnames(data)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
data$surveyQ <- toupper(data$surveyQ)
data$sector <- factor(data$sector) #could include labels
data$id <- factor(data$id)
data$region <- factor(data$region)
data$temp <- NULL
for(i in 1:nrow(data)) {
data$temp[i] <- paste0("20",data$surveyQ[i],sep="")
}
data$surveyQ <- data$temp
data <- data[,-ncol(data)]
data$surveyQ <- factor(data$surveyQ)
data$weight <- replace(data$weight, data$weight==0, 1)
data$factor <- data$weight*0.10
#data <- data[data$Latecomer == FALSE | is.na(data$Latecomer),]
data <- data[,1:(ncol(data)-6)]
data <- subset(data, !(surveyQ %in% exclude))
return(data)
}
arc <- skoon(read.csv("Argitekte.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
civil <- skoon(read.csv("Civils.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
qs <- skoon(read.csv("QS.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
##============================##
skoon <- function(data) {
colnames(data)[1:7] <- c("region","id","sector","weight","sectorw","factor","surveyQ")
data$surveyQ <- toupper(data$surveyQ)
data$sector <- factor(data$sector) #could include labels
data$id <- factor(data$id)
data$region <- factor(data$region)
data$temp <- NULL
for(i in 1:nrow(data)) {
ifelse(substr(data$surveyQ[i], 1, 1)==9,
data$temp[i] <- paste0("19",data$surveyQ[i],sep=""),
data$temp[i] <- paste0("20",data$surveyQ[i],sep=""))
}
data$surveyQ <- data$temp
data <- data[,-ncol(data)]
data$surveyQ <- factor(data$surveyQ)
data$sectorw <- as.numeric(as.character(data$sectorw))
data$factor <- as.numeric(as.character(data$factor))
data$factor <- data$weight*data$sectorw
#data <- data[data$Latecomer == FALSE | is.na(data$Latecomer),]
data <- data[,1:(ncol(data)-5)]
data <- subset(data, !(surveyQ %in% exclude))
return(data)
}
BER.R <- skoon(read.csv("Retail_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.W <- skoon(read.csv("Wholesale_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.V <- skoon(read.csv("Motor_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.V$factor <- BER.V$weight*0.2
##===============================##
BER.S <- read.csv("Services_05Q2-17Q2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
colnames(BER.S)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.S$temp <- NULL
for(i in 1:nrow(BER.S)) {
BER.S$temp[i] <- paste0("20",BER.S$surveyQ[i],sep="")
}
BER.S$surveyQ <- BER.S$temp
BER.S <- BER.S[,-ncol(BER.S)]
BER.S$surveyQ <- factor(BER.S$surveyQ)
BER.S$sector[BER.S$sector==6000] <- 6001
BER.S$sector[BER.S$sector==6010] <- 6011
catering <- c(6001,6020,6030,6011)
transport <- c(7020,7010,7070,7090,7080,7060,7000,7040,7100,7120,7110,7050)
realestate <- c(8000,8010)
business <- c(8040,8080,8070,8090,8020,8060,8050,8030)
other <- c(8150,8120,8210,8180,8140,8160,8190,8100,8200,8230,8130,8110,8170,8240,8220)
community <- c(9000,9010,9030,9050,9060,9020,9040)
BER.S$factor[BER.S$sector %in% catering] <- 0.15
BER.S$factor[BER.S$sector %in% transport] <- 0.15
BER.S$factor[BER.S$sector %in% realestate] <- 0.15
BER.S$factor[BER.S$sector %in% business] <- 0.05
BER.S$factor[BER.S$sector %in% other] <- 0.45
BER.S$factor[BER.S$sector %in% community] <- 0.05
BER.S$factor <- BER.S$factor*BER.S$weight
BER.S <- subset(BER.S, !(surveyQ %in% exclude))
#==================
#AGGREGATING
#==================
#Create an unweighted stacked version of all the surveys
#Match the same or similar questions from the different surveys (see survey question examples)
#Create NAs for missing questions
tempBER.M <- cbind(BER.M[,c("id","sector","weight","factor","surveyQ","Q20","Q7A","Q7P","Q1A","Q1P","Q8A","Q8P",            "Q4A","Q4P")],"Manufacturing")
colnames(tempBER.M) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",            "Q6A","Q6P",  "Sector")
tempBER.M[,c("Q5A","Q5P")] <- NA
tempBER.B <- cbind(BER.B[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Construction")
colnames(tempBER.B) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempBER.B[,c("Q6A","Q6P")] <- NA
tempBER.R <- cbind(BER.R[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q5A","Q5P","Q8",       "Q4A","Q4P")],"Trade")
colnames(tempBER.R) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A",      "Q6A","Q6P"  ,"Sector")
tempBER.R[,c("Q5P","Q6A","Q6P")] <- NA
tempBER.W <- cbind(BER.W[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q5A","Q5P","Q8",       "Q4A","Q4P")],"Trade")
colnames(tempBER.W) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A",      "Q6A","Q6P"  ,"Sector")
tempBER.W[,c("Q5P","Q6A","Q6P")] <- NA
tempBER.V <- cbind(BER.V[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P",                        "Q4A","Q4P")],"Trade")
colnames(tempBER.V) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P",                        "Q6A","Q6P"  ,"Sector")
tempBER.V[,c("Q4A","Q4P","Q5A","Q5P")] <- NA
tempBER.S <- cbind(BER.S[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Services")
colnames(tempBER.S) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempBER.S[,c("Q6A","Q6P")] <- NA
temparc <- cbind(arc[,c("id","sector","weight","factor","surveyQ", "Q1","Q6A","Q6P","Q5A","Q5P","Q2A","Q2P",                "Q4A","Q4P")],"Construction")
colnames(temparc) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",              "Q6A","Q6P","Sector")
temparc[,c("Q5A","Q5P")] <- NA
tempqs <- cbind(qs[,c("id","sector","weight","factor","surveyQ", "Q1","Q6A","Q6P","Q5A","Q5P","Q2A","Q2P",                "Q4A","Q4P")],"Construction")
colnames(tempqs) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",              "Q6A","Q6P","Sector")
tempqs[,c("Q5A","Q5P")] <- NA
tempcivil <- cbind(civil[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Construction")
colnames(tempcivil) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempcivil[,c("Q6A","Q6P")] <- NA
BER <- tempBER.M
BER <- rbind(BER,tempBER.B,tempBER.R,tempBER.W,tempBER.V,tempBER.S,temparc,tempqs,tempcivil)
BER <- BER[,c(15,1:12,16,17,13,14)]
rm(tempBER.M,tempBER.B,tempBER.R,tempBER.W,tempBER.V,tempBER.S,temparc,tempqs,tempcivil)
rm(BER.M,BER.B,BER.R,BER.W,BER.V,BER.S,arc,qs,civil)
#Clean data
BER$surveyQ <- toupper(BER$surveyQ)
BER$sector <- factor(BER$sector) #could include labels
BER$id <- factor(BER$id)
BER$surveyQ <- factor(BER$surveyQ)
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:ncol(BER)) {
BER[,i] <- replace(BER[,i], BER[,i]==2, 0)
BER[,i] <- replace(BER[,i], BER[,i]==3,-1)
}
BER$Q1 <- replace(BER$Q1, BER$Q1==0,-1) # replace 0 (Unsatisfactory) responses with -1
#Maak factor reg
Ej <- aggregate(BER$weight, by=list(BER$surveyQ,BER$sector), FUN=sum)
BER <-  merge(BER, Ej, by.x=c("surveyQ","sector"), by.y=c("Group.1","Group.2"))
BER$factorn <- BER$factor/BER$x
BER <- BER[,c(3,4,2,5,6,19,1,7:17)]
calc_wconf <- function(data) {
##Weighted versions
weeg <- function(temp) {  #calculate weighted mean for each quarter for all columns
temp <- cbind(factor=temp$factorn,temp$factorn*temp[(match("surveyQ",colnames(temp))+1):ncol(temp)])
#temp <- colSums(temp, na.rm=TRUE, dims = 1)/sum(temp$factor, na.rm=TRUE)
#calculate the sum(wi*xi)/sum(wi)
temp <- colSums(temp, na.rm=TRUE, dims = 1)/
sapply(colnames(temp), function(x) sum(temp$factor[!is.na(temp[colnames(temp) == x])]))
#weight only by those that responded to a specific question
return(temp)
}
w.confidence <- as.data.frame(t(sapply(levels(data$surveyQ), function(kwartaal) weeg(data[data$surveyQ==kwartaal,]))))
w.confidence$Conf_cc <- rowMeans(w.confidence[,c("Q1","Q2A","Q3A","Q4A","Q6A")],na.rm = TRUE, dims = 1)
w.confidence$Conf_fl <- rowMeans(w.confidence[,c("Q2P","Q3P","Q4P","Q6P")],na.rm = TRUE, dims = 1)
#w.confidence$Conf_all <- rowMeans(w.confidence[,c("Q1","Q2A","Q3A","Q4A","Q5A","Q6A","Q2P","Q3P","Q4P","Q5P","Q6P")],na.rm = TRUE, dims = 1)
w.confidence <- merge(datums,w.confidence,by.x="Date",by.y="row.names", all=TRUE)[,-3]
w.confidence[,14:15] <- na.approx(w.confidence[,14:15],na.rm = FALSE)
return(w.confidence)
}
w.indicators.M <- calc_wconf(BER[BER$Sector=="Manufacturing",])
w.indicators.B <- calc_wconf(BER[BER$Sector=="Construction",])
w.indicators.T <- calc_wconf(BER[BER$Sector=="Trade",])
w.indicators.S <- calc_wconf(BER[BER$Sector=="Services",])
seisoen <- function(product) {
for(i in 2:ncol(product)) {
product[,i] <- na.locf(product[,i], na.rm=FALSE, fromLast=TRUE)
m <- ts(product[,i],start=c(1992,01), end= c(2016,3), frequency = 4)
dec <- decompose(m, "additive")
product[,i] <- as.numeric(m - dec$seasonal)
}
return(product)
}
##Weighted versions
weights <- GDPdata[,c(1:4,6)]
activity <- cbind(w.indicators.M[,c(2,14)],w.indicators.B[,14],w.indicators.T[,14],w.indicators.S[,14])
colnames(activity) <- c("Date","Manufacturing","Construction","Trade","Services")
conf <- cbind(w.indicators.M[,c(2,15)],w.indicators.B[,15],w.indicators.T[,15],w.indicators.S[,15])
colnames(conf) <- c("Date","Manufacturing","Construction","Trade","Services")
activity <- seisoen(activity)
conf <- seisoen(conf)
activity[1:5,3] <- NA
conf[1:5,3] <- NA
activity[1,4] <- NA
conf[1,4] <- NA
activity[1:53,5] <- NA
conf[1:53,5] <- NA
#create weighted means by GDP share
activity$Activity <- sapply(activity$Date, function(x) weighted.mean(activity[which(activity$Date==x),c(2:5)],
weights[weights$Date==x,-1],na.rm=TRUE))
conf$Confidence <- sapply(conf$Date, function(x) weighted.mean(conf[which(conf$Date==x),c(2:5)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators <- cbind(activity[,c(1,6)],conf[,6])
#w.indicators <- seisoen(w.indicators)
colnames(w.indicators) <- c("Date","Activity","Confidence")
#w.indicators$C <- -1*princomp(w.indicators[,2:3])$scores[,1]
manufac <- cbind(activity[,c(1,2)],conf[,2],(GDPdata$ManuConf-50)/50, GDPgrowth4$Manufacturing)
#manufac <- cbind(indicators.M[,c(2,14:15)],(GDPdata$ManuConf-50)/50, GDPgrowth4$Manufacturing)
#colnames(manufac) <- c("Date","Activity","Confidence","BER_BCI","RGDP")
colnames(manufac) <- c("Date","Confidence_Current","Confidence_Expected","BER_BCI","RGDP_Growth")
construct <- cbind(activity[,c(1,3)],conf[,3],(GDPdata$BuildingConf-50)/50, GDPgrowth4$Construction)
#construct <- cbind(indicators.B[,c(2,14:15)],(GDPdata$BuildingConf-50)/50, GDPgrowth4$Construction)
#colnames(construct) <- c("Date","Activity","Confidence","BER_BCI","RGDP_Growth")
colnames(construct) <- c("Date","Confidence_Current","Confidence_Expected","BER_BCI","RGDP_Growth")
GDPdata$TradeConf <- rowMeans(GDPdata[,c(14,15,17)])
trade <- cbind(activity[,c(1,4)],conf[,4],(GDPdata$TradeConf-50)/50, GDPgrowth4$Trade)
#trade <- cbind(indicators.T[,c(2,14:15)],(GDPdata$TradeConf-50)/50, GDPgrowth4$Trade)
#colnames(trade) <- c("Date","Activity","Confidence","BER_BCI","RGDP")
colnames(trade) <- c("Date","Confidence_Current","Confidence_Expected","BER_BCI","RGDP_Growth")
services <- cbind(activity[,c(1,5)],conf[,5], GDPgrowth4$Services)
#services <- cbind(indicators.S[,c(2,14:15)], GDPgrowth4$Services)
#colnames(services) <- c("Date","Activity","Confidence","RGDP")
colnames(services) <- c("Date","Confidence_Current","Confidence_Expected","RGDP_Growth")
services$BER_BCI <- 1
services <- services[,c(1,2,3,5,4)]
conf_indices <- cbind(w.indicators,GDPdata$BER_BCI, GDPgrowth4$SACCI,GDPgrowth4$RGDP)
#colnames(conf_indices) <- c("Date","Activity","Confidence","BER_BCI","SACCI_Growth","RGDP_Growth")
colnames(conf_indices) <- c("Date","Confidence_Current","Confidence_Expected","BER_BCI","SACCI_Growth","RGDP_Growth")
conf_indices1 <- cbind(w.indicators,GDPdata$BER_BCI, GDPdata$SACCI,GDPgrowth4$RGDP)
#colnames(conf_indices1) <- c("Date","Activity","Confidence","BER_BCI","SACCI_BCI","RGDP_Growth")
colnames(conf_indices1) <- c("Date","Confidence (Current)", "Confidence (Expected)", "BER BCI", "SACCI BCI", "RGDP Growth")
#conf_indices <- cbind(w.indicators_2,GDPdata$BER_BCI, GDPdata$SACCI_G,GDPgrowth4$RGDP)
#colnames(conf_indices) <- c("Date","Activity","Confidence","BER_BCI","SACCI_Growth","RGDP_Growth")
vardat <- cbind(conf_indices[,2],conf_indices[,6])
colnames(vardat) <- c("Confidence_Current","RGDP_Growth")
infocrit <- VARselect(vardat, lag.max = 12, type = "const")
k_aic <- infocrit$selection[1]
k_hq  <- infocrit$selection[2]
k_sic <- infocrit$selection[3]
k <- min(k_aic,k_sic,k_hq)
var1 <- VAR(vardat,p=k,type="const")
irf.y1 <- irf(var1,impulse = "Confidence_Current", response = "RGDP_Growth", n.ahead = 12,runs = 1000, seed=12345)
irf.y2 <- irf(var1,impulse = "RGDP_Growth", response = "Confidence_Current", n.ahead = 12,runs = 1000, seed=12345)
par(mfrow=c(1,1), new=FALSE)
nf <- layout(matrix(c(1,2,1,2), 1, 2, byrow = TRUE))
plot(irf.y1,plot.type = c("single"), main="Response from Confidence", xlab="Horizon in quarters", ylab="Real GDP Growth")
par(new = TRUE)
plot(irf.y2,plot.type = c("single"), main="Response from RGDP Growth", xlab="Horizon in quarters", ylab="Confidence (Current)")
source("plot_varfevd.R")
par(mfrow=c(1,1), new=FALSE)
par(mfrow=c(1,2))
plot.varfevd(fevd(var1, n.ahead = 10 ),plot.type = "single", xlab="Horizon in quarters",
ylab="Proportion of variance explained")
source("plot_varfevd.R")
par(mfrow=c(1,1), new=FALSE)
par(mfrow=c(1,2))
plot.varfevd(fevd(var1, n.ahead = 10 ),plot.type = "single", xlab="Horizon in quarters", ylab="Proportion of variance explained")
source("plot_varfevd.R")
par(mfrow=c(1,1), new=FALSE)
par(mfrow=c(1,2))
plot.varfevd(fevd(var1, n.ahead = 10 ),plot.type = "single", xlab="Horizon in quarters",
ylab="Proportion of variance explained")
source("plot_varfevd.R")
par(mfrow=c(1,1), new=FALSE)
par(mfrow=c(1,2))
plot.varfevd(fevd(var1, n.ahead = 10 ),plot.type = "single", xlab="Horizon in quarters",
ylab="Proportion of variance explained")
png(filename = "fevd_var1.png", width = 600, height = 360)
source("plot_varfevd.R")
par(mfrow=c(1,1), new=FALSE)
par(mfrow=c(1,2))
plot.varfevd(fevd(var1, n.ahead = 10 ),plot.type = "single", xlab="Horizon in quarters",
ylab="Proportion of variance explained")
dev.off()
vardat <- cbind(manufac[,2],manufac[,5])
colnames(vardat) <- c("Confidence_Current","RGDP_Growth")
infocrit <- VARselect(vardat, lag.max = 12, type = "const")
k_aic <- infocrit$selection[1]
k_hq  <- infocrit$selection[2]
k_sic <- infocrit$selection[3]
k <- min(k_aic,k_sic,k_hq)
varm <- VAR(vardat,p=k,type="const")
irf.y1 <- irf(varm,impulse = "Confidence_Current", response = "RGDP_Growth", n.ahead = 12,runs = 1000, seed=12345)
irf.y2 <- irf(varm,impulse = "RGDP_Growth", response = "Confidence_Current", n.ahead = 12,runs = 1000, seed=12345)
par(mfrow=c(1,1), new=FALSE)
nf <- layout(matrix(c(1,2,1,2), 1, 2, byrow = TRUE))
#layout.show(nf)
#par(cex=1)
plot(irf.y1,plot.type = c("single"), main="Response from Confidence", xlab="Horizon in quarters")
par(new = TRUE)
plot(irf.y2,plot.type = c("single"), main="Response from RGDP Growth", xlab="Horizon in quarters")
source("plot_varfevd.R")
par(mfrow=c(1,2))
plot.varfevd(fevd(varm, n.ahead = 10 ),plot.type = "single")
dev.off()
source("plot_varfevd.R")
par(mfrow=c(1,2))
plot.varfevd(fevd(varm, n.ahead = 10 ),plot.type = "single")
png(filename = "fevd_var2.png", width = 600, height = 360)
source("plot_varfevd.R")
par(mfrow=c(1,2))
plot.varfevd(fevd(varm, n.ahead = 10 ),plot.type = "single")
dev.off()
png(filename = "fevd_var2.png", width = 600, height = 360)
source("plot_varfevd.R")
par(mfrow=c(1,2))
plot.varfevd(fevd(varm, n.ahead = 10 ),plot.type = "single", xlab="Horizon in quarters",
ylab="Proportion of variance explained")
dev.off()
