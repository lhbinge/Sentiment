building <- merge(indicators,building, by.x="Date", by.y="date", all=TRUE)[,-2]
building <- merge(indicators,building, by.x="Date", by.y="Date", all=TRUE)[,-2]
building$Date <- GDPdata$X[-1:-5]
indicator_plot <- cbind(building[,c("con_tot.Q1","con_tot.Q2A")],pub[,c("Date","con_totalQ1","con_totalQ2A")])
#colnames(indicator_plot) <- c("Date","nonres (incl. latecomers)","nonres (excl. latecomers)")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q1","con_tot.Q2A")],pub[,c("con_totalQ1","con_totalQ2A")])
#colnames(indicator_plot) <- c("Date","nonres (incl. latecomers)","nonres (excl. latecomers)")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q1")],pub[,c("con_totalQ1")])
#colnames(indicator_plot) <- c("Date","nonres (incl. latecomers)","nonres (excl. latecomers)")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q2A")],pub[,c("con_totalQ2A")])
#colnames(indicator_plot) <- c("Date","nonres (incl. latecomers)","nonres (excl. latecomers)")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q1")],pub[,c("con_totalQ1")])
colnames(indicator_plot) <- c("Date","con_tot.Q1:Microdata","con_tot.Q1:Published")indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q1")],pub[,c("con_totalQ1")])
colnames(indicator_plot) <- c("Date","con_tot.Q1:Microdata","con_tot.Q1:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q2A")],pub[,c("con_totalQ2A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q3A")],pub[,c("con_totalQ3A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q4A")],pub[,c("con_totalQ4A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q5A")],pub[,c("con_totalQ5A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q6A")],pub[,c("con_totalQ6A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q7")],pub[,c("con_totalQ7")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
View(BER.B)
BER.B$Q6 <- replace(BER.B$Q6, BER.B$Q6==-1,0) # replace 0 (No) responses with -1
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000",]
res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(res) <- paste("res",colnames(res),sep=".")
building <- BER.B[BER.B$sector=="5010" | BER.B$sector=="6010",]
nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(nonres) <- paste("nonres",colnames(nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
total <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(total) <- paste("total",colnames(total),sep=".")
building <- BER.B[BER.B$sector=="5000",]
con_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_res) <- paste("con_res",colnames(con_res),sep=".")
building <- BER.B[BER.B$sector=="5010",]
con_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_nonres) <- paste("con_nonres",colnames(con_nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="5010",]
con_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_tot) <- paste("con_tot",colnames(con_tot),sep=".")
building <- BER.B[BER.B$sector=="6000",]
subcon_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_res) <- paste("subcon_res",colnames(subcon_res),sep=".")
building <- BER.B[BER.B$sector=="6010",]
subcon_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_nonres) <- paste("subcon_nonres",colnames(subcon_nonres),sep=".")
building <- BER.B[BER.B$sector=="6000" | BER.B$sector=="6010",]
subcon_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_tot) <- paste("subcon_tot",colnames(subcon_tot),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
wc <- building[building$region=="1",]
wc <- aggregate(wc[,(match("surveyQ",colnames(wc))+1):ncol(wc)], by=list(wc$surveyQ), FUN=mean, na.rm=TRUE)
colnames(wc) <- paste("wc",colnames(wc),sep=".")
kzn <- building[building$region=="5",]
kzn <- aggregate(kzn[,(match("surveyQ",colnames(kzn))+1):ncol(kzn)], by=list(kzn$surveyQ), FUN=mean, na.rm=TRUE)
colnames(kzn) <- paste("kzn",colnames(kzn),sep=".")
gp <- building[building$region=="6",]
gp <- aggregate(gp[,(match("surveyQ",colnames(gp))+1):ncol(gp)], by=list(gp$surveyQ), FUN=mean, na.rm=TRUE)
colnames(gp) <- paste("gp",colnames(gp),sep=".")
building <- cbind(res[,2:17],nonres[,2:17],total[,2:17],
con_res[,2:17],con_nonres[,2:17],con_tot[,2:17],
subcon_res[,2:17],subcon_nonres[,2:17],subcon_tot[,2:17],
wc[,2:17],kzn[,2:17],gp[,2:17], deparse.level = 1)
building <- building * 100
building <- cbind(Date=res$res.Group.1,building)
indicators <- read.csv("indicators_B.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
indicators <- indicators[,1:2]
building <- merge(indicators,building, by.x="Date", by.y="Date", all=TRUE)[,-2]
building$Date <- GDPdata$X[-1:-5]
indicator_plot <- cbind(building[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
##=============================
BER.B <- rbind.fill(read.csv("building_alt.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE),
read.csv("Building_pre2001.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.B <- BER.B[BER.B$Latecomer == FALSE | is.na(BER.B$Latecomer),]
colnames(BER.B)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.B$surveyQ <- toupper(BER.B$surveyQ)
BER.B$region <- factor(BER.B$region)
BER.B$sector <- factor(BER.B$sector) #could include labels
BER.B$id <- factor(BER.B$id)
BER.B$surveyQ <- factor(BER.B$surveyQ)
BER.B <- rbind.fill(read.csv("Building.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE),
read.csv("Building_pre2001.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.B <- BER.B[BER.B$Latecomer == FALSE | is.na(BER.B$Latecomer),]
colnames(BER.B)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.B$surveyQ <- toupper(BER.B$surveyQ)
BER.B$region <- factor(BER.B$region)
BER.B$sector <- factor(BER.B$sector) #could include labels
BER.B$id <- factor(BER.B$id)
BER.B$surveyQ <- factor(BER.B$surveyQ)
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:16) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3,-1)
}
for(i in 17:20) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==1, 0.67)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0.33)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3, 0)
}
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000",]
res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(res) <- paste("res",colnames(res),sep=".")
building <- BER.B[BER.B$sector=="5010" | BER.B$sector=="6010",]
nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(nonres) <- paste("nonres",colnames(nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
total <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(total) <- paste("total",colnames(total),sep=".")
building <- BER.B[BER.B$sector=="5000",]
con_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_res) <- paste("con_res",colnames(con_res),sep=".")
building <- BER.B[BER.B$sector=="5010",]
con_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_nonres) <- paste("con_nonres",colnames(con_nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="5010",]
con_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_tot) <- paste("con_tot",colnames(con_tot),sep=".")
building <- BER.B[BER.B$sector=="6000",]
subcon_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_res) <- paste("subcon_res",colnames(subcon_res),sep=".")
building <- BER.B[BER.B$sector=="6010",]
subcon_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_nonres) <- paste("subcon_nonres",colnames(subcon_nonres),sep=".")
building <- BER.B[BER.B$sector=="6000" | BER.B$sector=="6010",]
subcon_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_tot) <- paste("subcon_tot",colnames(subcon_tot),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
wc <- building[building$region=="1",]
wc <- aggregate(wc[,(match("surveyQ",colnames(wc))+1):ncol(wc)], by=list(wc$surveyQ), FUN=mean, na.rm=TRUE)
colnames(wc) <- paste("wc",colnames(wc),sep=".")
kzn <- building[building$region=="5",]
kzn <- aggregate(kzn[,(match("surveyQ",colnames(kzn))+1):ncol(kzn)], by=list(kzn$surveyQ), FUN=mean, na.rm=TRUE)
colnames(kzn) <- paste("kzn",colnames(kzn),sep=".")
gp <- building[building$region=="6",]
gp <- aggregate(gp[,(match("surveyQ",colnames(gp))+1):ncol(gp)], by=list(gp$surveyQ), FUN=mean, na.rm=TRUE)
colnames(gp) <- paste("gp",colnames(gp),sep=".")
building <- cbind(res[,2:17],nonres[,2:17],total[,2:17],
con_res[,2:17],con_nonres[,2:17],con_tot[,2:17],
subcon_res[,2:17],subcon_nonres[,2:17],subcon_tot[,2:17],
wc[,2:17],kzn[,2:17],gp[,2:17], deparse.level = 1)
building <- building * 100
building <- cbind(Date=res$res.Group.1,building)
indicators <- read.csv("indicators_B.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
indicators <- indicators[,1:2]
building <- merge(indicators,building, by.x="Date", by.y="Date", all=TRUE)[,-2]
building$Date <- GDPdata$X[-1:-5]
View(building)
indicator_plot <- cbind(building[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q7")],pub[,c("con_totalQ7")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q8")],pub[,c("con_totalQ8")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q9")],pub[,c("con_totalQ9")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
for(i in 17:20) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==1, 1)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0.5)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3, 0)
}
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000",]
res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(res) <- paste("res",colnames(res),sep=".")
building <- BER.B[BER.B$sector=="5010" | BER.B$sector=="6010",]
nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(nonres) <- paste("nonres",colnames(nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
total <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(total) <- paste("total",colnames(total),sep=".")
building <- BER.B[BER.B$sector=="5000",]
con_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_res) <- paste("con_res",colnames(con_res),sep=".")
building <- BER.B[BER.B$sector=="5010",]
con_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_nonres) <- paste("con_nonres",colnames(con_nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="5010",]
con_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_tot) <- paste("con_tot",colnames(con_tot),sep=".")
building <- BER.B[BER.B$sector=="6000",]
subcon_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_res) <- paste("subcon_res",colnames(subcon_res),sep=".")
building <- BER.B[BER.B$sector=="6010",]
subcon_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_nonres) <- paste("subcon_nonres",colnames(subcon_nonres),sep=".")
building <- BER.B[BER.B$sector=="6000" | BER.B$sector=="6010",]
subcon_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_tot) <- paste("subcon_tot",colnames(subcon_tot),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
wc <- building[building$region=="1",]
wc <- aggregate(wc[,(match("surveyQ",colnames(wc))+1):ncol(wc)], by=list(wc$surveyQ), FUN=mean, na.rm=TRUE)
colnames(wc) <- paste("wc",colnames(wc),sep=".")
kzn <- building[building$region=="5",]
kzn <- aggregate(kzn[,(match("surveyQ",colnames(kzn))+1):ncol(kzn)], by=list(kzn$surveyQ), FUN=mean, na.rm=TRUE)
colnames(kzn) <- paste("kzn",colnames(kzn),sep=".")
gp <- building[building$region=="6",]
gp <- aggregate(gp[,(match("surveyQ",colnames(gp))+1):ncol(gp)], by=list(gp$surveyQ), FUN=mean, na.rm=TRUE)
colnames(gp) <- paste("gp",colnames(gp),sep=".")
building <- cbind(res[,2:17],nonres[,2:17],total[,2:17],
con_res[,2:17],con_nonres[,2:17],con_tot[,2:17],
subcon_res[,2:17],subcon_nonres[,2:17],subcon_tot[,2:17],
wc[,2:17],kzn[,2:17],gp[,2:17], deparse.level = 1)
building <- building * 100
building <- cbind(Date=res$res.Group.1,building)
indicators <- read.csv("indicators_B.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
indicators <- indicators[,1:2]
building <- merge(indicators,building, by.x="Date", by.y="Date", all=TRUE)[,-2]
building$Date <- GDPdata$X[-1:-5]
indicator_plot <- cbind(building[,c("Date","con_tot.Q9")],pub[,c("con_totalQ9")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
BER.B <- rbind.fill(read.csv("Building.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE),
read.csv("Building_pre2001.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.B <- BER.B[BER.B$Latecomer == FALSE | is.na(BER.B$Latecomer),]
colnames(BER.B)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.B$surveyQ <- toupper(BER.B$surveyQ)
BER.B$region <- factor(BER.B$region)
BER.B$sector <- factor(BER.B$sector) #could include labels
BER.B$id <- factor(BER.B$id)
BER.B$surveyQ <- factor(BER.B$surveyQ)
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:16) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3,-1)
}
BER.B$Q6 <- replace(BER.B$Q6, BER.B$Q6==-1,0) # replace -1 (Less keen) responses with 0
for(i in 17:20) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==1, 1)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0.5)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3, 0)
}
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000",]
res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(res) <- paste("res",colnames(res),sep=".")
building <- BER.B[BER.B$sector=="5010" | BER.B$sector=="6010",]
nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(nonres) <- paste("nonres",colnames(nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
total <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(total) <- paste("total",colnames(total),sep=".")
building <- BER.B[BER.B$sector=="5000",]
con_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_res) <- paste("con_res",colnames(con_res),sep=".")
building <- BER.B[BER.B$sector=="5010",]
con_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_nonres) <- paste("con_nonres",colnames(con_nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="5010",]
con_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_tot) <- paste("con_tot",colnames(con_tot),sep=".")
building <- BER.B[BER.B$sector=="6000",]
subcon_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_res) <- paste("subcon_res",colnames(subcon_res),sep=".")
building <- BER.B[BER.B$sector=="6010",]
subcon_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_nonres) <- paste("subcon_nonres",colnames(subcon_nonres),sep=".")
building <- BER.B[BER.B$sector=="6000" | BER.B$sector=="6010",]
subcon_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_tot) <- paste("subcon_tot",colnames(subcon_tot),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
wc <- building[building$region=="1",]
wc <- aggregate(wc[,(match("surveyQ",colnames(wc))+1):ncol(wc)], by=list(wc$surveyQ), FUN=mean, na.rm=TRUE)
colnames(wc) <- paste("wc",colnames(wc),sep=".")
kzn <- building[building$region=="5",]
kzn <- aggregate(kzn[,(match("surveyQ",colnames(kzn))+1):ncol(kzn)], by=list(kzn$surveyQ), FUN=mean, na.rm=TRUE)
colnames(kzn) <- paste("kzn",colnames(kzn),sep=".")
gp <- building[building$region=="6",]
gp <- aggregate(gp[,(match("surveyQ",colnames(gp))+1):ncol(gp)], by=list(gp$surveyQ), FUN=mean, na.rm=TRUE)
colnames(gp) <- paste("gp",colnames(gp),sep=".")
building <- cbind(res[,2:17],nonres[,2:17],total[,2:17],
con_res[,2:17],con_nonres[,2:17],con_tot[,2:17],
subcon_res[,2:17],subcon_nonres[,2:17],subcon_tot[,2:17],
wc[,2:17],kzn[,2:17],gp[,2:17], deparse.level = 1)
building <- building * 100
building <- cbind(Date=res$res.Group.1,building)
indicators <- read.csv("indicators_B.csv", header=TRUE, sep=";",na.strings = "", skipNul = TRUE)
indicators <- indicators[,1:2]
building <- merge(indicators,building, by.x="Date", by.y="Date", all=TRUE)[,-2]
building$Date <- GDPdata$X[-1:-5]
indicator_plot <- cbind(building[,c("Date","con_tot.Q9")],pub[,c("con_totalQ9")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q8")],pub[,c("con_totalQ8")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q7")],pub[,c("con_totalQ7")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
View(building)
