data$surveyQ <- data$temp
data <- data[,-ncol(data)]
data$surveyQ <- factor(data$surveyQ)
data$sectorw <- as.numeric(as.character(data$sectorw))
data$factor <- as.numeric(as.character(data$factor))
data$factor <- data$weight*data$sectorw
#data <- data[data$Latecomer == FALSE | is.na(data$Latecomer),]
data <- data[,1:(ncol(data)-5)]
data <- subset(data, !(surveyQ %in% exclude))
return(data)
}
BER.R <- skoon(read.csv("Retail_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.W <- skoon(read.csv("Wholesale_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.V <- skoon(read.csv("Motor_92Q2-17Q2_sep.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
BER.V$factor <- BER.V$weight*0.2
##===============================##
BER.S <- read.csv("Services_05Q2-17Q2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
colnames(BER.S)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.S$temp <- NULL
for(i in 1:nrow(BER.S)) {
BER.S$temp[i] <- paste0("20",BER.S$surveyQ[i],sep="")
}
BER.S$surveyQ <- BER.S$temp
BER.S <- BER.S[,-ncol(BER.S)]
BER.S$surveyQ <- factor(BER.S$surveyQ)
BER.S$sector[BER.S$sector==6000] <- 6001
BER.S$sector[BER.S$sector==6010] <- 6011
catering <- c(6001,6020,6030,6011)
transport <- c(7020,7010,7070,7090,7080,7060,7000,7040,7100,7120,7110,7050)
realestate <- c(8000,8010)
business <- c(8040,8080,8070,8090,8020,8060,8050,8030)
other <- c(8150,8120,8210,8180,8140,8160,8190,8100,8200,8230,8130,8110,8170,8240,8220)
community <- c(9000,9010,9030,9050,9060,9020,9040)
BER.S$factor[BER.S$sector %in% catering] <- 0.15
BER.S$factor[BER.S$sector %in% transport] <- 0.15
BER.S$factor[BER.S$sector %in% realestate] <- 0.15
BER.S$factor[BER.S$sector %in% business] <- 0.05
BER.S$factor[BER.S$sector %in% other] <- 0.45
BER.S$factor[BER.S$sector %in% community] <- 0.05
BER.S$factor <- BER.S$factor*BER.S$weight
BER.S <- subset(BER.S, !(surveyQ %in% exclude))
#==================
#AGGREGATING
#==================
#Create an unweighted stacked version of all the surveys
#Match the same or similar questions from the different surveys (see survey question examples)
#Create NAs for missing questions
tempBER.M <- cbind(BER.M[,c("id","sector","weight","factor","surveyQ","Q20","Q7A","Q7P","Q1A","Q1P","Q8A","Q8P",            "Q4A","Q4P")],"Manufacturing")
colnames(tempBER.M) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",            "Q6A","Q6P",  "Sector")
tempBER.M[,c("Q5A","Q5P")] <- NA
tempBER.B <- cbind(BER.B[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Construction")
colnames(tempBER.B) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempBER.B[,c("Q6A","Q6P")] <- NA
tempBER.R <- cbind(BER.R[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q5A","Q5P","Q8",       "Q4A","Q4P")],"Trade")
colnames(tempBER.R) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A",      "Q6A","Q6P"  ,"Sector")
tempBER.R[,c("Q5P","Q6A","Q6P")] <- NA
tempBER.W <- cbind(BER.W[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q5A","Q5P","Q8",       "Q4A","Q4P")],"Trade")
colnames(tempBER.W) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A",      "Q6A","Q6P"  ,"Sector")
tempBER.W[,c("Q5P","Q6A","Q6P")] <- NA
tempBER.V <- cbind(BER.V[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P",                        "Q4A","Q4P")],"Trade")
colnames(tempBER.V) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P",                        "Q6A","Q6P"  ,"Sector")
tempBER.V[,c("Q4A","Q4P","Q5A","Q5P")] <- NA
tempBER.S <- cbind(BER.S[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Services")
colnames(tempBER.S) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempBER.S[,c("Q6A","Q6P")] <- NA
temparc <- cbind(arc[,c("id","sector","weight","factor","surveyQ", "Q1","Q6A","Q6P","Q5A","Q5P","Q2A","Q2P",                "Q4A","Q4P")],"Construction")
colnames(temparc) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",              "Q6A","Q6P","Sector")
temparc[,c("Q5A","Q5P")] <- NA
tempqs <- cbind(qs[,c("id","sector","weight","factor","surveyQ", "Q1","Q6A","Q6P","Q5A","Q5P","Q2A","Q2P",                "Q4A","Q4P")],"Construction")
colnames(tempqs) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P",              "Q6A","Q6P","Sector")
tempqs[,c("Q5A","Q5P")] <- NA
tempcivil <- cbind(civil[,c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P")],            "Construction")
colnames(tempcivil) <-    c("id","sector","weight","factor","surveyQ", "Q1","Q2A","Q2P","Q3A","Q3P","Q4A","Q4P","Q5A","Q5P",              "Sector")
tempcivil[,c("Q6A","Q6P")] <- NA
BER <- tempBER.M
BER <- rbind(BER,tempBER.B,tempBER.R,tempBER.W,tempBER.V,tempBER.S,temparc,tempqs,tempcivil)
BER <- BER[,c(15,1:12,16,17,13,14)]
rm(tempBER.M,tempBER.B,tempBER.R,tempBER.W,tempBER.V,tempBER.S,temparc,tempqs,tempcivil)
rm(BER.M,BER.B,BER.R,BER.W,BER.V,BER.S,arc,qs,civil)
#Clean data
BER$surveyQ <- toupper(BER$surveyQ)
BER$sector <- factor(BER$sector) #could include labels
BER$id <- factor(BER$id)
BER$surveyQ <- factor(BER$surveyQ)
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:ncol(BER)) {
BER[,i] <- replace(BER[,i], BER[,i]==2, 0)
BER[,i] <- replace(BER[,i], BER[,i]==3,-1)
}
BER$Q1 <- replace(BER$Q1, BER$Q1==0,-1) # replace 0 (Unsatisfactory) responses with -1
#Maak factor reg
Ej <- aggregate(BER$weight, by=list(BER$surveyQ,BER$sector), FUN=sum)
BER <-  merge(BER, Ej, by.x=c("surveyQ","sector"), by.y=c("Group.1","Group.2"))
BER$factorn <- BER$factor/BER$x
BER <- BER[,c(3,4,2,5,6,19,1,7:17)]
calc_wconf <- function(data) {
##Weighted versions
weeg <- function(temp) {  #calculate weighted mean for each quarter for all columns
temp <- cbind(factor=temp$factorn,temp$factorn*temp[(match("surveyQ",colnames(temp))+1):ncol(temp)])
#temp <- colSums(temp, na.rm=TRUE, dims = 1)/sum(temp$factor, na.rm=TRUE)
#calculate the sum(wi*xi)/sum(wi)
temp <- colSums(temp, na.rm=TRUE, dims = 1)/
sapply(colnames(temp), function(x) sum(temp$factor[!is.na(temp[colnames(temp) == x])]))
#weight only by those that responded to a specific question
return(temp)
}
w.confidence <- as.data.frame(t(sapply(levels(data$surveyQ), function(kwartaal) weeg(data[data$surveyQ==kwartaal,]))))
w.confidence$Conf_cc <- rowMeans(w.confidence[,c("Q1","Q2A","Q3A","Q4A","Q6A")],na.rm = TRUE, dims = 1)
w.confidence$Conf_fl <- rowMeans(w.confidence[,c("Q2P","Q3P","Q4P","Q6P")],na.rm = TRUE, dims = 1)
#w.confidence$Conf_all <- rowMeans(w.confidence[,c("Q1","Q2A","Q3A","Q4A","Q5A","Q6A","Q2P","Q3P","Q4P","Q5P","Q6P")],na.rm = TRUE, dims = 1)
w.confidence <- merge(datums,w.confidence,by.x="Date",by.y="row.names", all=TRUE)[,-3]
w.confidence[,14:15] <- na.approx(w.confidence[,14:15],na.rm = FALSE)
return(w.confidence)
}
w.indicators.M <- calc_wconf(BER[BER$Sector=="Manufacturing",])
w.indicators.B <- calc_wconf(BER[BER$Sector=="Construction",])
w.indicators.T <- calc_wconf(BER[BER$Sector=="Trade",])
w.indicators.S <- calc_wconf(BER[BER$Sector=="Services",])
seisoen <- function(product) {
for(i in 2:ncol(product)) {
product[,i] <- na.locf(product[,i], na.rm=FALSE, fromLast=TRUE)
m <- ts(product[,i],start=c(1992,01), end= c(2016,3), frequency = 4)
dec <- decompose(m, "additive")
product[,i] <- as.numeric(m - dec$seasonal)
}
return(product)
}
##Weighted versions
weights <- GDPdata[,c(1:4,6)]
activity <- cbind(w.indicators.M[,c(2,14)],w.indicators.B[,14],w.indicators.T[,14],w.indicators.S[,14])
colnames(activity) <- c("Date","Manufacturing","Construction","Trade","Services")
conf <- cbind(w.indicators.M[,c(2,15)],w.indicators.B[,15],w.indicators.T[,15],w.indicators.S[,15])
colnames(conf) <- c("Date","Manufacturing","Construction","Trade","Services")
activity <- seisoen(activity)
conf <- seisoen(conf)
activity[1:5,3] <- NA
conf[1:5,3] <- NA
activity[1,4] <- NA
conf[1,4] <- NA
activity[1:53,5] <- NA
conf[1:53,5] <- NA
#create weighted means by GDP share
activity$Activity <- sapply(activity$Date, function(x) weighted.mean(activity[which(activity$Date==x),c(2:5)],
weights[weights$Date==x,-1],na.rm=TRUE))
conf$Confidence <- sapply(conf$Date, function(x) weighted.mean(conf[which(conf$Date==x),c(2:5)],
weights[weights$Date==x,-1],na.rm=TRUE))
w.indicators <- cbind(activity[,c(1,6)],conf[,6])
#w.indicators <- seisoen(w.indicators)
colnames(w.indicators) <- c("Date","Activity","Confidence")
#w.indicators$C <- -1*princomp(w.indicators[,2:3])$scores[,1]
conf_indices <- cbind(w.indicators,GDPdata$BER_BCI, GDPgrowth4$SACCI,GDPgrowth4$RGDP)
#colnames(conf_indices) <- c("Date","Activity","Confidence","BER_BCI","SACCI_Growth","RGDP_Growth")
colnames(conf_indices) <- c("Date","Confidence_Current","Confidence_Expected","BER_BCI","SACCI_Growth","RGDP_Growth")
conf_indices1 <- cbind(w.indicators,GDPdata$BER_BCI, GDPdata$SACCI,GDPgrowth4$RGDP)
#colnames(conf_indices1) <- c("Date","Activity","Confidence","BER_BCI","SACCI_BCI","RGDP_Growth")
colnames(conf_indices1) <- c("Date","Confidence (Current)", "Confidence (Expected)", "BER BCI", "SACCI BCI", "RGDP Growth")
#conf_indices <- cbind(w.indicators_2,GDPdata$BER_BCI, GDPdata$SACCI_G,GDPgrowth4$RGDP)
#colnames(conf_indices) <- c("Date","Activity","Confidence","BER_BCI","SACCI_Growth","RGDP_Growth")
index_plot <- conf_indices1
index_plot[,2:6] <- scale(index_plot[,2:6])
g <- ggplot(index_plot)
g <- g + geom_line(aes(x=Date, y=`Confidence (Current)`, colour="Confidence (Current)", linetype="Confidence (Current)", size = "Confidence (Current)"))
g <- g + geom_line(aes(x=Date, y=`Confidence (Expected)`, colour="Confidence (Expected)", linetype="Confidence (Expected)", size = "Confidence (Expected)"))
g <- g + geom_line(aes(x=Date, y=`BER BCI`, colour="BER BCI", linetype="BER BCI", size = "BER BCI"))
g <- g + geom_line(aes(x=Date, y=`SACCI BCI`, colour="SACCI BCI", linetype="SACCI BCI", size = "SACCI BCI"))
g <- g + geom_line(aes(x=Date, y=`RGDP Growth`, colour="RGDP Growth", linetype="RGDP Growth", size = "RGDP Growth"))
g <- g + scale_linetype_manual(values=c("twodash","solid","solid","dashed","longdash"))
g <- g + scale_size_manual(values=c(0.71,1.1,1.1,1.1,0.71))
g <- g + scale_colour_manual(values=c("#A3A500","#F8766D","#00BFC4","#E76BF3","#00BF7D"))
g <- g + labs(color="Legend text", linetype="Legend text", size="Legend text")
g <- g + geom_rect(data=recessions.df, aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill='grey', alpha=0.5)
g <- g + ylab("Standardised Indicator") + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"), expand=c(0,0),limits = as.Date(c("1990-12-31", NA)))
g <- g + theme(legend.position="bottom")
g
Confidence_Current <- conf_indices[,2]
RGDP_Growth <- conf_indices[,6]
JSE <- GDPgrowth4$RJSE
Bond <- GDPdata$Bond2
TBill <- GDPdata$T.Bill
Spread <- Bond-TBill
Employment <- GDPgrowth4$Employ
Investment <- GDPgrowth4$Rinvestment
Production <- GDPgrowth4$RProduction
vardat <- cbind(Confidence_Current,JSE,Spread,RGDP_Growth,
Production,Employment,Investment)
vare <- VAR(vardat,p=2,type="const")
irf.y1 <- irf(vare,impulse = c("Confidence_Current"),
response = c("RGDP_Growth","Production","Employment","Investment"), n.ahead = 12,runs = 1000, seed=12345)
par(mfrow=c(2,2),mar=c(3,4,2,1), cex=0.7)
plot(irf.y1,plot.type = c("single"), main="Response from Confidence", xlab="Horizon in quarters")
source("plot_varfevd.R")
fevd(vare, n.ahead = 10 )
View(w.indicators)
w.indicators$Diff <- w.indicators$Confidence - w.indicators$Activity
indicator_plot <- cbind(w.indicators,GDPgrowth4$RGDP)
#colnames(indicator_plot) <- c("Date","Microdata","Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + geom_point()
g <- g + ylab("Indicator") + xlab("")
g <- g + ggtitle("Services Q1")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(w.indicators,GDPgrowth4$RGDP)
indicator_plot[,-1] <- scale(indicator_plot[,-1])
#colnames(indicator_plot) <- c("Date","Microdata","Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + geom_point()
g <- g + ylab("Indicator") + xlab("")
g <- g + ggtitle("Services Q1")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
w.indicators$Diff <- w.indicators$Confidence - w.indicators$Activity
indicator_plot <- cbind(w.indicators,GDPgrowth4$RGDP)
indicator_plot[,-1] <- scale(indicator_plot[,-1])
#colnames(indicator_plot) <- c("Date","Microdata","Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
#g <- g + geom_point()
g <- g + ylab("Indicator") + xlab("")
g <- g + ggtitle("Services Q1")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
w.indicators$Diff <- w.indicators$Confidence - w.indicators$Activity
for(i in 1:99) {
w.indicators$Diff[i+1] <- w.indicators$Confidence[i] - w.indicators$Activity[i+1]
}
w.indicators$Diff <- w.indicators$Confidence - w.indicators$Activity
for(i in 1:98) {
w.indicators$Diff[i+1] <- w.indicators$Confidence[i] - w.indicators$Activity[i+1]
}
indicator_plot <- cbind(w.indicators,GDPgrowth4$RGDP)
indicator_plot[,-1] <- scale(indicator_plot[,-1])
#colnames(indicator_plot) <- c("Date","Microdata","Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
#g <- g + geom_point()
g <- g + ylab("Indicator") + xlab("")
g <- g + ggtitle("Services Q1")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
?scale_linetype_manual
setwd("C:\\Users\\Laurie\\OneDrive\\Documents\\BING\\BER Confidence Surveys\\Sentiment")
#change the working directory
#install.packages("XLConnect")
options(java.parameters = "-Xmx4g" )
#options(java.parameters = "- Xmx1024m")
suppressMessages(library(XLConnect))
suppressMessages(library(ggplot2))
suppressMessages(library(reshape2))
suppressMessages(library(scales))
suppressMessages(library(zoo))
datums <- read.csv("dates.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
datums$Datum <- as.Date(datums$Datum, format = "%Y/%m/%d")
pub_b <- read.csv("Building_BER_Published.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
ref_b <- read.csv("Ref Series_Build.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
pub_a <- read.csv("Arc_Published.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
#-----------------------
#Building Survey
BER.B <- read.csv("Building_93Q2-17Q2.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
colnames(BER.B)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
BER.B$surveyQ <- toupper(BER.B$surveyQ)
BER.B$sector <- factor(BER.B$sector) #could include labels
BER.B$id <- factor(BER.B$id)
BER.B$region <- factor(BER.B$region)
#Clean SurveyQ variable
BER.B$temp <- NULL
for(i in 1:nrow(BER.B)) {
ifelse(substr(BER.B$surveyQ[i], 1, 1)==9,
BER.B$temp[i] <- paste0("19",BER.B$surveyQ[i],sep=""),
BER.B$temp[i] <- paste0("20",BER.B$surveyQ[i],sep=""))
}
BER.B$surveyQ <- BER.B$temp
BER.B <- BER.B[,-ncol(BER.B)]
BER.B$surveyQ <- factor(BER.B$surveyQ)
#Exclude Latecomers and old quesions
BER.B <- BER.B[BER.B$Latecomer == FALSE | is.na(BER.B$Latecomer),]
BER.B <- BER.B[,1:20]
BER.B <- BER.B[,!grepl("X",colnames(BER.B))]
#Replace Values
for(i in 7:16) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3,-1)
}
for(i in 17:20) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==1, 1)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0.5)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3, 0)
}
#--------------------------
#Architects, QSs and Civil Engineers
skoon <- function(data) {
colnames(data)[1:6] <- c("region","id","sector","weight","factor","surveyQ")
data$surveyQ <- toupper(data$surveyQ)
data$sector <- factor(data$sector) #could include labels
data$id <- factor(data$id)
data$region <- factor(data$region)
data$temp <- NULL
for(i in 1:nrow(data)) {
data$temp[i] <- paste0("20",data$surveyQ[i],sep="")
}
data$surveyQ <- data$temp
data <- data[,-ncol(data)]
data$surveyQ <- factor(data$surveyQ)
for(i in 7:(ncol(data)-6)) {
data[,i] <- replace(data[,i], data[,i]==2, 0)
data[,i] <- replace(data[,i], data[,i]==3,-1)
}
if(ncol(data)>23) {
for(i in 17:20) {
data[,i] <- replace(data[,i], data[,i]==0, 0.5)
data[,i] <- replace(data[,i], data[,i]==-1, 0)
}
}
data <- data[data$Latecomer == FALSE | is.na(data$Latecomer),]
data <- data[,1:(ncol(data)-6)]
return(data)
}
arc <- skoon(read.csv("Argitekte.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
qs <- skoon(read.csv("QS.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))
civil <- skoon(read.csv("Civils.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE))[,-21:-22]
##=====================##
## DEFINE SECTOR CODES ##
##=====================##
residential <- c(5000,6000)
non_residential <- c(5010,6010)
contractor_res <- 5000
contractor_nonres <- 5010
contractor <- c(5000,5010)
subcon_res <- 6000
subcon_nonres <- 6010
subcon <- c(6000,6010)
all_b <- c(5000,5010,6000,6010)
streke <- unique(BER.B$region)
arcs <- 99
civils <- c(700,701,702,703)
qss <- 88
ongeweeg <- function(data,sektor,streek,d) {
data <- data[data$sector %in% sektor & data$region %in% streek,]
sector <- aggregate(data[,(match("surveyQ",colnames(data))+1):ncol(data)],
by=list(data$surveyQ), FUN=mean, na.rm=TRUE)
sector$Obs <- aggregate(data$Q2A, by=list(data$surveyQ), FUN=length)[,2]
sector <- merge(datums[d,],sector, by.x="Date", by.y="Group.1", all=TRUE)
sector <- sector[,c(1:2,ncol(sector),3:(ncol(sector)-1))]
sector[,-1:-3] <- na.approx(sector[,-1:-3]*100)
return(sector)
}
##======================##
## CALCULATE INDICATORS ##
##======================##
#BUILDING
Building <- ongeweeg(BER.B,all_b,streke,6:102)
Residential <- ongeweeg(BER.B,residential,streke,6:102)
Non_residential <- ongeweeg(BER.B,non_residential,streke,6:102)
Contractor_res <- ongeweeg(BER.B,contractor_res,streke,6:102)
Contractor_nonres <- ongeweeg(BER.B,contractor_nonres,streke,6:102)
Contractor <- ongeweeg(BER.B,contractor,streke,6:102)
Subcon_res <- ongeweeg(BER.B,subcon_res,streke,6:102)
Subcon_nonres <- ongeweeg(BER.B,subcon_nonres,streke,6:102)
Subcon <- ongeweeg(BER.B,subcon,streke,6:102)
WC.B <- ongeweeg(BER.B,all_b,1,6:102)
KZN.B <- ongeweeg(BER.B,all_b,5,6:102)
GP.B <- ongeweeg(BER.B,all_b,6,6:102)
#Interpolasie
Contractor[c(3,22,29,51),c(4,5,7,9,11,13)] <- pub_b[c(3,22,29,51),2:7]
Contractor_res[c(3,22,29,51),c(4,5,7,9,11,13)] <- pub_b[c(3,22,29,51),11:16]
Contractor_nonres[c(3,22,29,51),c(4,5,7,9,11,13)] <- pub_b[c(3,22,29,51),20:25]
Subcon[c(3,22,29,51),c(4,5,7,9,11,13)] <- pub_b[c(3,22,29,51),29:34]
Subcon_res[c(3,22,29,51),c(4,5,7,9,11,13)] <- pub_b[c(3,22,29,51),38:43]
Subcon_nonres[c(3,22,29,51),c(4,5,7,9,11,13)] <- pub_b[c(3,22,29,51),47:52]
#----------------------------
Architects <- ongeweeg(arc,arcs,streke,38:102)
Civils <- ongeweeg(civil,civils,streke,38:102)
QSs <- ongeweeg(qs,qss,streke,38:102)
#Interpolasie
Architects[c(19),c(3,4,6,8,10,12)] <- pub_a[c(19),2:7]
QSs[c(11,19),c(3,4,6,8,10,12)] <- pub_a[c(11,19),8:13]
Civils[c(19),c(3,4,6,8,10,12:15)] <- pub_a[c(19),14:22]
##=============================
#Plot
indicator_plot <- cbind(Building[,c("Datum","Q1")],Residential[,"Q1"],Non_residential[,"Q1"])
colnames(indicator_plot) <- c("Date","Building","Residential","Non-residential")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator") + xlab("")
g <- g + ggtitle("New Building Categories")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
##==========================
##Write series to Excel file
##==========================
Building1 <- Building[,c(1,3:17)]
Building1 <- cbind(Building1,NA,Residential[,c(1,3:17)])
Building1 <- cbind(Building1,NA,Non_residential[,c(1,3:17)])
Building1 <- cbind(Building1,NA,WC.B[,c(1,3:17)])
Building1 <- cbind(Building1,NA,KZN.B[,c(1,3:17)])
Building1 <- cbind(Building1,NA,GP.B[,c(1,3:17)])
colnames(Building1)[17] <- " "
colnames(Building1)[34] <- " "
colnames(Building1)[51] <- " "
colnames(Building1)[68] <- " "
colnames(Building1)[85] <- " "
Building1[,c(1,18,35,52,69,86)] <- lapply(Building1[,c(1,18,35,52,69,86)], as.character)
Building1[,c(-1:-2,-17:-19,-34:-36,-51:-53,-68:-70,-85:-87)] <- round(Building1[,c(-1:-2,-17:-19,-34:-36,-51:-53,-68:-70,-85:-87)],2)
header <- character(length=101)
header[1:16] <- "Total"
header[18:33] <- "Residential"
header[35:50] <- "Non-Residential"
header[52:67] <- "WC"
header[69:84] <- "KZN"
header[86:101] <- "GP"
header <- as.data.frame(t(header))
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = header, sheet = "BUILD",
startRow = 1, header = FALSE)
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = Building1, sheet = "BUILD",
startRow = 2)
Contractor1 <- Contractor[,c(1,3:17)]
Contractor1 <- cbind(Contractor1,NA,Contractor_res[,c(1,3:17)])
Contractor1 <- cbind(Contractor1,NA,Contractor_nonres[,c(1,3:17)])
colnames(Contractor1)[17] <- " "
colnames(Contractor1)[34] <- " "
Contractor1[,c(1,18,35)] <- lapply(Contractor1[,c(1,18,35)], as.character)
Contractor1[,c(-1:-2,-17:-19,-34:-36)] <- round(Contractor1[,c(-1:-2,-17:-19,-34:-36)],2)
header <- character(length=50)
header[1:16] <- "Total"
header[18:33] <- "Residential"
header[35:50] <- "Non-Residential"
header <- as.data.frame(t(header))
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = header, sheet = "BUILD-Con",
startRow = 1, header = FALSE)
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = Contractor1, sheet = "BUILD-Con",
startRow = 2)
Subcon1 <- Subcon[,c(1,3:17)]
Subcon1 <- cbind(Subcon1,NA,Subcon_res[,c(1,3:17)])
Subcon1 <- cbind(Subcon1,NA,Subcon_nonres[,c(1,3:17)])
colnames(Subcon1)[17] <- " "
colnames(Subcon1)[34] <- " "
Subcon1[,c(1,18,35)] <- lapply(Subcon1[,c(1,18,35)], as.character)
Subcon1[,c(-1:-2,-17:-19,-34:-36)] <- round(Subcon1[,c(-1:-2,-17:-19,-34:-36)],2)
header <- character(length=50)
header[1:16] <- "Total"
header[18:33] <- "Residential"
header[35:50] <- "Non-Residential"
header <- as.data.frame(t(header))
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = header, sheet = "BUILD-Sub",
startRow = 1, header = FALSE)
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = Subcon1, sheet = "BUILD-Sub",
startRow = 2)
architects1 <- Architects[,c(-2)]
architects1[,c(1)] <- as.character(architects1[,c(1)])
architects1[,c(-1:-2)] <- round(architects1[,c(-1:-2)],2)
header <- character(length=13)
header[1:13] <- "Total"
header <- as.data.frame(t(header))
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = header, sheet = "ARC",
startRow = 1, header = FALSE)
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = architects1, sheet = "ARC",
startRow = 2)
qss1 <- QSs[,c(-2)]
qss1[,c(1)] <- as.character(qss1[,c(1)])
qss1[,c(-1:-2)] <- round(qss1[,c(-1:-2)],2)
header <- character(length=13)
header[1:13] <- "Total"
header <- as.data.frame(t(header))
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = header, sheet = "QS",
startRow = 1, header = FALSE)
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = architects1, sheet = "QS",
startRow = 2)
civils1 <- Civils[,c(-2)]
civils1[,c(1)] <- as.character(civils1[,c(1)])
civils1[,c(-1:-2)] <- round(civils1[,c(-1:-2)],2)
header <- character(length=16)
header[1:16] <- "Total"
header <- as.data.frame(t(header))
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = header, sheet = "CE",
startRow = 1, header = FALSE)
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = architects1, sheet = "CE",
startRow = 2)
civils1 <- Civils[,c(-2)]
civils1[,c(1)] <- as.character(civils1[,c(1)])
civils1[,c(-1:-2)] <- round(civils1[,c(-1:-2)],2)
header <- character(length=13)
header[1:13] <- "Total"
header <- as.data.frame(t(header))
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = header, sheet = "CE",
startRow = 1, header = FALSE)
writeWorksheetToFile(file = "Building_Indicators.xlsx", data = architects1, sheet = "CE",
startRow = 2)
